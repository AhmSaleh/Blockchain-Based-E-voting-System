[{"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\index.js":"1","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\reportWebVitals.js":"2","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\App.js":"3","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\LoginForm.js":"4","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RegisterForm.js":"5","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\ballot.js":"6","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Admin.js":"7","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\TestAdmin.js":"8","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\NewCandidate.js":"9","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ConfirmNewPassword.js":"10","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ConfirmEmail.js":"11","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RemoveCandidate.js":"12","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\AddUser.js":"13","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ForgotPassword.js":"14","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Candidates.js":"15","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Homepage.js":"16","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Election.js":"17","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Signin.jsx":"18","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Layout.js":"19","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\web3.js":"20","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\WinnerCandidate.js":"21","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Footer2.js":"22","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Navbar2.0.js":"23","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\LoserCandidates.js":"24","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Header.js":"25","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Footer.js":"26"},{"size":656,"mtime":1625256405280,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1620124474433,"results":"29","hashOfConfig":"28"},{"size":5190,"mtime":1625258235292,"results":"30","hashOfConfig":"28"},{"size":4936,"mtime":1625253038803,"results":"31","hashOfConfig":"28"},{"size":4997,"mtime":1625227005451,"results":"32","hashOfConfig":"28"},{"size":2537,"mtime":1625226777499,"results":"33","hashOfConfig":"28"},{"size":5185,"mtime":1625260376769,"results":"34","hashOfConfig":"28"},{"size":4547,"mtime":1625225102620,"results":"35","hashOfConfig":"28"},{"size":4733,"mtime":1620178549502,"results":"36","hashOfConfig":"28"},{"size":5980,"mtime":1625242037663,"results":"37","hashOfConfig":"28"},{"size":3722,"mtime":1620178549501,"results":"38","hashOfConfig":"28"},{"size":5276,"mtime":1625226777501,"results":"39","hashOfConfig":"28"},{"size":5775,"mtime":1625227009673,"results":"40","hashOfConfig":"28"},{"size":4509,"mtime":1625157784430,"results":"41","hashOfConfig":"28"},{"size":7227,"mtime":1625253360617,"results":"42","hashOfConfig":"28"},{"size":7360,"mtime":1625258225490,"results":"43","hashOfConfig":"28"},{"size":3570,"mtime":1625258349295,"results":"44","hashOfConfig":"28"},{"size":1799,"mtime":1625246028589,"results":"45","hashOfConfig":"28"},{"size":255,"mtime":1625219491643,"results":"46","hashOfConfig":"28"},{"size":527,"mtime":1620124474435,"results":"47","hashOfConfig":"28"},{"size":1637,"mtime":1625258452336,"results":"48","hashOfConfig":"28"},{"size":437,"mtime":1625246028587,"results":"49","hashOfConfig":"28"},{"size":2193,"mtime":1625246028588,"results":"50","hashOfConfig":"28"},{"size":1650,"mtime":1625257731373,"results":"51","hashOfConfig":"28"},{"size":2050,"mtime":1625219052187,"results":"52","hashOfConfig":"28"},{"size":755,"mtime":1625227008404,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1hmlgro",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\index.js",[],["116","117"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\reportWebVitals.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\App.js",["118"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\LoginForm.js",["119","120"],"import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport swal from \"sweetalert\";\r\nimport \"../static/styles.css\";\r\nimport Layout from \"./Layout\";\r\nimport \"../static/styles.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nconst atob = require(\"atob\");\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst parseJwt = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split(\".\")[1]));\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nclass LoginForm extends Component {\r\n  login = (event) => {\r\n    event.preventDefault();\r\n\r\n    const param = {\r\n      nationalID: event.target.nationalID.value,\r\n      password: event.target.password.value,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/auth\", param)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          const token = res.data;\r\n          localStorage.setItem(\"token\", token);\r\n          const tokenInfo = parseJwt(token);\r\n          swal(\"Success!\", \"You've been logged in successfully!\", \"success\");\r\n          if (tokenInfo.isAdmin) window.location.pathname = \"/admin\";\r\n          else window.location.pathname = \"/elections\";\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal(\"Error!\", \"Failed to log in!\", \"error\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <head>\r\n          <link\r\n            href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            id=\"bootstrap-css\"\r\n          />\r\n          <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n          <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n\r\n          <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\r\n            integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\r\n            crossorigin=\"anonymous\"\r\n          />\r\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/styles.css\" />\r\n        </head>\r\n\r\n        <body >\r\n          <div className=\"container\" style={{margin: \"10% 20%\"}}>\r\n            <div className=\"d-flex justify-content-center h-100\">\r\n              <div className=\"card\">\r\n                <div class=\"card-header\" style={{backgroundColor: \"#ffc312\"}}>\r\n                  <h3>Sign In</h3>\r\n                </div>\r\n\r\n                <div className=\"card-body\" style={{backgroundColor: \"#333\"}}>\r\n                  {/* Login Form */}\r\n                  <form onSubmit={this.login}>\r\n                    {/* National ID Input Group */}\r\n                    <div className=\"input-group form-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                          <i className=\"fas fa-user\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"nationalID\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"National ID\"\r\n                        required\r\n                      ></input>\r\n                    </div>\r\n\r\n                    {/* Password Input Group */}\r\n                    <div className=\"input-group form-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                          <i className=\"fas fa-key\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Password\"\r\n                        required\r\n                      ></input>\r\n                    </div>\r\n\r\n                    {/* Login Button */}\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"submit\"\r\n                        value=\"Login\"\r\n                        class=\"btn float-right login_btn\"\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n                {/* Card Footer */}\r\n                <div className=\"card-footer\" style={{backgroundColor: \"#ffc312\"}}>\r\n                  <div className=\"d-flex justify-content-center links\">\r\n                    Don't have an account?\r\n                    <Link to=\"/register\"> Register now!</Link>\r\n                  </div>\r\n                  <div class=\"d-flex justify-content-center\">\r\n                    <Link to=\"/forgot_password\">Forgot your password?</Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </body>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RegisterForm.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\ballot.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Admin.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\TestAdmin.js",["121","122","123","124"],"import React, { Component, useEffect } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport atob from \"atob\";\r\nimport Layout from \"./Layout\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst TestAdmin = () => {\r\n    const checkIfAuthenticated = () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        let decoded;\r\n        if (!token) {\r\n            swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n            window.location.pathname = \"/login\";\r\n        }\r\n        try {\r\n            decoded = JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (err) {\r\n            console.log(err.message);\r\n            swal(\"Error!\", \"An error has occured!\", \"error\");\r\n            window.location.pathname = \"/login\";\r\n        }\r\n        if (!decoded.isAdmin) {\r\n            swal(\"Error!\", \"Unauthorized!\", \"error\");\r\n            window.location.pathname = \"/login\";\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkIfAuthenticated();\r\n    }, []);\r\n\r\n    // Navigating to the NewCandidate.js component\r\n    const addCandidate = () => {\r\n        window.location.pathname = \"/new_candidate\";\r\n    };\r\n\r\n    // Navigating to the RemoveCandidate.js component\r\n    const removeCandidate = () => {\r\n        window.location.pathname = \"/remove_candidate\";\r\n    };\r\n\r\n    const addUser = () => {\r\n        window.location.pathname = \"/add_user\";\r\n    };\r\n\r\n    /* TODO: This function should start a new election \r\n    by accessing the Blockchain and adding a new election to it*/\r\n    const startElection = () => {\r\n        swal(\"Not implemented yet!!! xD\", {\r\n            icon: \"error\",\r\n        });\r\n    };\r\n\r\n    /* TODO: This function should end an on-going election \r\n    by accessing the Blockchain and removing the running election*/\r\n    const endElection = () => {\r\n        swal(\"Not implemented yet!!! xD\", {\r\n            icon: \"error\",\r\n        });\r\n    };\r\n\r\n    const useStyles = makeStyles(() => ({\r\n            root: {\r\n                width: '100%',\r\n                maxWidth: 360,\r\n                backgroundColor: \"#333\",\r\n            },\r\n        }));\r\n\r\n    const classes = useStyles();\r\n  \r\n    return(\r\n        <Layout>\r\n            <div>\r\n                <head>\r\n                    <link\r\n                    href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\r\n                    rel=\"stylesheet\"\r\n                    id=\"bootstrap-css\"\r\n                    />\r\n                    <link\r\n                    href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n                    rel=\"stylesheet\"\r\n                    />\r\n                    <link\r\n                    href=\"../static/button_styles.css\"\r\n                    rel=\"stylesheet\"\r\n                    />\r\n                </head>\r\n\r\n                <body>\r\n                    <div className={classes.root} style={{margin: \"5% auto\"}} >\r\n                        {/* List of admin control buttons */}\r\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                            {/* Add Candidate Button */}\r\n                            <ListItem button onClick={addCandidate}>\r\n                                <ListItemText primary=\"Add Candidate\" style={{color: \"#ffc312\"}}/>\r\n                            </ListItem>\r\n\r\n                            {/* Remove Candidate Button */}\r\n                            <ListItem button onClick={removeCandidate}>\r\n                                <ListItemText primary=\"Remove Candidate\" style={{color: \"white\"}}/>\r\n                            </ListItem>\r\n\r\n                            {/* Add User Button */}\r\n                            <ListItem button onClick={addUser}>\r\n                                <ListItemText primary=\"Add User\" style={{color: \"#ffc312\"}}/>\r\n                            </ListItem>\r\n\r\n                            {/* End Election Button */}\r\n                            <ListItem button onClick={endElection}>\r\n                                <ListItemText primary=\"End Election\" style={{color: \"white\"}}/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n                </body>\r\n            </div>\r\n        </Layout>\r\n    );\r\n  }\r\n\r\nexport default TestAdmin;\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\NewCandidate.js",["125"],"import React from \"react\";\r\nimport { Form, Button, Message, Image } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport web3 from \"../web3\";\r\nimport ballot from \"../ballot\";\r\nimport Layout from \"./Layout\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport atob from \"atob\";\r\n\r\nclass NewCandidate extends React.Component {\r\n  checkIfAuthenticated() {\r\n    const token = localStorage.getItem(\"token\");\r\n    let decoded;\r\n    if (!token) {\r\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n    try {\r\n      decoded = JSON.parse(atob(token.split(\".\")[1]));\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      swal(\"Error!\", \"An error has occured!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n    if (!decoded.isAdmin) {\r\n      swal(\"Error!\", \"Unauthorized!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.checkIfAuthenticated();\r\n  }\r\n\r\n  state = {\r\n    candidateName: \"\",\r\n    candidateSymbol: \"\",\r\n    candidatePhoto: \"\",\r\n    errorMessage: \"\",\r\n    loading: false,\r\n    index: -1,\r\n  };\r\n\r\n  onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const storeInBlockchain = async () => {\r\n      this.setState({ errorMessage: \"\", loading: true });\r\n      try {\r\n        const accounts = await web3.eth.getAccounts();\r\n\r\n        await ballot.methods.addCandidate(this.state.candidateName).send({\r\n          from: accounts[0],\r\n          gas: 1000000,\r\n        });\r\n        this.setState({ loading: false });\r\n        swal(\r\n          \"Success!\",\r\n          \"Candidate added to the election successfully!\",\r\n          \"success\"\r\n        );\r\n        window.location.pathname = \"/new_candidate\";\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    };\r\n\r\n    const param = {\r\n      name: this.state.candidateName,\r\n      symbol: this.state.candidateSymbol,\r\n      photo: this.state.candidatePhoto,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/candidates\", param, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({ index: res.index });\r\n          storeInBlockchain();\r\n        } else if (res.status === 401)\r\n          swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n        else if (res.status === 403) swal(\"Error!\", \"Unauthorized!\", \"error\");\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Error!\", \"Failed to add candidate!\", \"error\");\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  imageHandler = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        this.setState({ candidatePhoto: reader.result });\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  render() {\r\n    const { candidatePhoto } = this.state;\r\n    return (\r\n      <Layout>\r\n        <div class=\"new_candidate_form\">\r\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n            <Form.Field>\r\n              <label>Name</label>\r\n              <input\r\n                placeholder=\"Candidate Name\"\r\n                value={this.state.candidateName}\r\n                onChange={(event) =>\r\n                  this.setState({ candidateName: event.target.value })\r\n                }\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Symbol</label>\r\n              <input\r\n                placeholder=\"Candidate Symbol\"\r\n                value={this.state.candidateSymbol}\r\n                onChange={(event) =>\r\n                  this.setState({ candidateSymbol: event.target.value })\r\n                }\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Photo</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"image-upload\"\r\n                id=\"input\"\r\n                onChange={this.imageHandler}\r\n              />\r\n            </Form.Field>\r\n            <div className=\"img-holder\">\r\n              <Image src={candidatePhoto} alt=\"\" size=\"medium\" rounded />\r\n            </div>\r\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n            <Button\r\n              fluid\r\n              secondary\r\n              style={{ margin: \"0 auto\", display: \"block\", margin: \"10% 0px\" }}\r\n              loading={this.state.loading}\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCandidate;\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ConfirmNewPassword.js",["126"],"import React from 'react';\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\n\r\nconst ConfirmNewPassword = () => {\r\n    const componentDidMount = () => {\r\n    alert(\"Please check your email for a confirmation code.\");\r\n  }\r\n\r\n  // When the user enters the confirmation code then clicks confirm\r\n  const confirm = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Getting the new user password\r\n    const newPassword = event.target.newPassword.value;\r\n    const newPasswordConfirmation = event.target.newPasswordConfirmation.value;\r\n\r\n    // Checking if the password and its confirmation match\r\n    if(newPassword !== newPasswordConfirmation){\r\n        swal(\"Error!\", \"Please make sure you re-enter your password correctly!\", \"error\");\r\n        return;\r\n    }\r\n\r\n    //Retrieve the National ID from the ForgotPassword component, and add the password\r\n    const param = {\r\n      nationalID: localStorage.getItem(\"nationalID\"),\r\n      password: newPassword,\r\n    };\r\n\r\n    // Check the confirmation code then change the user's password if the code is correct\r\n    if (event.target.confirmationCode.value === localStorage.getItem(\"code\")) {\r\n      axios\r\n        .put(\"http://localhost:5000/api/users/forgotpassword\", param)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            swal(\"Success!\", \"Password Changed Successfully\", \"success\");\r\n            localStorage.removeItem(\"code\");\r\n            window.location.pathname = \"/login\";\r\n          }\r\n        })\r\n        .catch((error) => swal(\"Error!\", error.message, \"error\"));\r\n    } else {\r\n      swal(\"Error!\", \"Invalid Code\", \"error\");\r\n    }\r\n  };\r\n\r\n    return (\r\n        <div>\r\n            <head>\r\n                <link\r\n                    href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\r\n                    rel=\"stylesheet\"\r\n                    id=\"bootstrap-css\"\r\n                />\r\n                <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n                <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n\r\n                <link\r\n                    rel=\"stylesheet\"\r\n                    href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\r\n                    integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\r\n                    crossorigin=\"anonymous\"\r\n                />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/styles.css\" />\r\n            </head>\r\n\r\n            <body>\r\n            <div className=\"container\" style={{ margin: \"auto\", width: \"auto\" }}>\r\n                {/* Card Container */}\r\n                <div className=\"d-flex justify-content-center h-100\">\r\n                <div className=\"card\">\r\n                    {/* Card Header */}\r\n                    <div class=\"card-header\">\r\n                    <h3>New Password Confirmation</h3>\r\n                    </div>\r\n\r\n                    {/* Card */}\r\n                    <div className=\"card-body\">\r\n                    {/* Confirmation Form */}\r\n                    <form onSubmit={confirm}>\r\n                        {/* New Password Input Group */}\r\n                        <div className=\"input-group form-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                            <i class=\"fas fa-shield-alt\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"newPassword\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Please enter your new password...\"\r\n                            required\r\n                        ></input>\r\n                        </div>\r\n\r\n\r\n                        {/* New Password Confirmation Input Group */}\r\n                        <div className=\"input-group form-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                            <i class=\"fas fa-shield-alt\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"newPasswordConfirmation\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Please re-enter your new password...\"\r\n                            required\r\n                        ></input>\r\n                        </div>\r\n                        \r\n                        {/* Confirmation Code Input Group */}\r\n                        <div className=\"input-group form-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                            <i class=\"fas fa-shield-alt\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"confirmationCode\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Please enter your confirmation code...\"\r\n                            required\r\n                        ></input>\r\n                        </div>\r\n\r\n                        {/* Submit Button */}\r\n                        <div className=\"form-group\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Submit\"\r\n                            class=\"btn float-right login_btn\"\r\n                        />\r\n                        </div>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </body>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmNewPassword\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ConfirmEmail.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RemoveCandidate.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\AddUser.js",["127"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport atob from \"atob\";\r\nimport \"../static/styles.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Layout from \"./Layout\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nclass AddUser extends Component {\r\n  checkIfAuthenticated() {\r\n    const token = localStorage.getItem(\"token\");\r\n    let decoded;\r\n    if (!token) {\r\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n    try {\r\n      decoded = JSON.parse(atob(token.split(\".\")[1]));\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      swal(\"Error!\", \"An error has occured!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n    if (!decoded.isAdmin) {\r\n      swal(\"Error!\", \"Unauthorized!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.checkIfAuthenticated();\r\n  }\r\n\r\n  addUser = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Creating a new user\r\n    const param = {\r\n      nationalID: event.target.nationalID.value,\r\n      email: event.target.email.value,\r\n      isRegistered: false,\r\n      isAdmin: document.getElementById(\"isAdmin\").checked,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/users\", param, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          swal(\"Success!\", \"User added successfully!\", \"success\");\r\n          window.location.pathname = \"/admin\";\r\n        }\r\n      })\r\n      .catch(() => swal(\"Error!\", \"Adding user failed!\", \"error\"));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n      <div>\r\n        <head>\r\n          <link\r\n            href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            id=\"bootstrap-css\"\r\n          />\r\n          <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n          <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n\r\n          <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\r\n            integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\r\n            crossorigin=\"anonymous\"\r\n          />\r\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/styles.css\" />\r\n        </head>\r\n\r\n        <body>\r\n          <div className=\"container\" style={{margin: \"10% 20%\"}}>\r\n            {/* Card Container */}\r\n            <div className=\"d-flex justify-content-center h-100\">\r\n              <div className=\"card\">\r\n                {/* Card Header */}\r\n                <div class=\"card-header\" style={{backgroundColor: \"#ffc312\"}}>\r\n                  <h3>Add User</h3>\r\n                </div>\r\n\r\n                {/* Card */}\r\n                <div className=\"card-body\" style={{backgroundColor: \"#333\"}}>\r\n                  {/* Add User Form */}\r\n                  <form onSubmit={this.addUser}>\r\n                    {/* National ID Input Group */}\r\n                    <div className=\"input-group form-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                          <i className=\"fas fa-user\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"nationalID\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"National ID\"\r\n                        required\r\n                      ></input>\r\n                    </div>\r\n\r\n                    {/* Email Input Group */}\r\n                    <div className=\"input-group form-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                          <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Email\"\r\n                        required\r\n                      ></input>\r\n                    </div>\r\n\r\n                    {/* isAdmin Input Group */}\r\n                    <div>\r\n                      <div className=\"input-group-prepend\">\r\n                        <span\r\n                          className=\"input-group-text\"\r\n                          style={{ width: \"10%\" }}\r\n                        >\r\n                          <i className=\"fas fa-user-cog\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"row align-items-center remember\">\r\n                        <input\r\n                          id=\"isAdmin\"\r\n                          name=\"isAdmin\"\r\n                          type=\"checkbox\"\r\n                        ></input>\r\n                        <label htmlFor=\"isAdmin\">Is Admin?</label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Add User Button */}\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"submit\"\r\n                        value=\"Add\"\r\n                        class=\"btn float-right login_btn\"\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </body>\r\n      </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ForgotPassword.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Candidates.js",["128"],"import React, { Component } from \"react\";\r\nimport web3 from \"../web3\";\r\nimport ballot from \"../ballot\";\r\nimport swal from \"sweetalert\";\r\nimport \"../static/candidate_styles.css\";\r\nimport axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport \"../static/styles.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Layout from \"./Layout\";\r\n\r\nclass Candidates extends Component {\r\n  checkIfAuthenticated() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n    try {\r\n      jwt.verify(token);\r\n    } catch (err) {\r\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.checkIfAuthenticated();\r\n  }\r\n\r\n  state = {\r\n    index: -1,\r\n  };\r\n\r\n  vote = (index, event) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once your vote has been cast, it cannot be changed!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willVote) => {\r\n      if (willVote) {\r\n        this.voteYesCallback(index, event);\r\n        //swal(\"Candidate Index: \" + index);\r\n      } else {\r\n        swal(\"You did not cast a vote.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  voteYesCallback = async (index, event) => {\r\n    //event.preventDefault();\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    await ballot.methods\r\n      .vote(index)\r\n      .send({\r\n        from: accounts[0],\r\n        gas: \"100000\",\r\n      })\r\n      .then((hasVoted) => {\r\n        if (hasVoted) {\r\n          swal(\"Your vote was successfully cast!\", {\r\n            icon: \"success\",\r\n          });\r\n        } else {\r\n          swal(\"Error\", \"There was an error when casting your vote!\", {\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      });\r\n\r\n    axios\r\n      .put(\"http://localhost:5000/api/users/voted\", \"\", {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200)\r\n          swal(\"Success!\", \"Your vote has been cast successfully\", \"success\");\r\n        else if (res.status === 404) swal(\"Error!\", \"User not found\", \"error\");\r\n      })\r\n      .catch(() =>\r\n        swal(\"Error!\", \"Failed to vote, please try again later\", \"error\")\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n      <div>\r\n        <head>\r\n          <link\r\n            href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            id=\"bootstrap-css\"\r\n          />\r\n          <link\r\n            href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n            rel=\"stylesheet\"\r\n          />\r\n          <link\r\n            rel=\"stylesheet\"\r\n            type=\"text/css\"\r\n            href=\"../static/candidate_styles.css\"\r\n          />\r\n        </head>\r\n\r\n        <body>\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-12 col-sm-8 col-lg-6\">\r\n                {/* Section Heading */}\r\n                <div\r\n                  className=\"section_heading text-center wow fadeInUp\"\r\n                  data-wow-delay=\"0.2s\"\r\n                  style={{\r\n                    visibility: \"visible\",\r\n                    animationDelay: 0.2,\r\n                    animationName: \"fadeInUp\",\r\n                  }}\r\n                >\r\n                  <h3 style={{fontSize: \"40px\"}}>Candidates</h3>\r\n                  <p style={{fontSize: \"25px\"}} >\r\n                    Please cast your vote for one of the available candidates.\r\n                  </p>\r\n                  <div className=\"line\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              {this.props.candidates.length > 0\r\n                ? this.props.candidates.map((candidate, index) => (\r\n                    // Candidate\r\n                    <div className=\"col-12 col-sm-6 col-lg-3\">\r\n                      <div\r\n                        className=\"single_advisor_profile wow fadeInUp\"\r\n                        data-wow-delay=\"0.2s\"\r\n                        style={{\r\n                          visibility: \"visible\",\r\n                          animationDelay: 0.2,\r\n                          animationName: \"fadeInUp\",\r\n                        }}\r\n                        onClick={() => this.vote(index)}\r\n                        key={index}\r\n                        data-index={index}\r\n                      >\r\n                        {/* Candidate Avatar */}\r\n                        <div className=\"advisor_thumb\">\r\n                          <img\r\n                            //src=\"https://bootdey.com/img/Content/avatar/avatar1.png\"\r\n                            src={candidate.photo}\r\n                          />\r\n                        </div>\r\n                        {/* Candidate Details */}\r\n                        <div className=\"single_advisor_details_info\">\r\n                          <h6>{candidate.name}</h6>\r\n                          <p className=\"designation\">{candidate.symbol}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : \"There are currently no candidates\"}\r\n\r\n              {/* Candidate */}\r\n              {/* <div className=\"col-12 col-sm-6 col-lg-3\">\r\n                                <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\" style={{visibility: \"visible\", animationDelay: 0.2, animationName: \"fadeInUp\"}} onClick={this.vote}> */}\r\n              {/* Candidate Avatar */}\r\n              {/* <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/></div> */}\r\n              {/* Candidate Details */}\r\n              {/* <div className=\"single_advisor_details_info\">\r\n                                        <h6>Simon Jackson</h6>\r\n                                        <p className=\"designation\">Candidate symbol</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n\r\n              {/* Candidate */}\r\n              {/* <div className=\"col-12 col-sm-6 col-lg-3\">\r\n                                <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\" style={{visibility: \"visible\", animationDelay: 0.2, animationName: \"fadeInUp\"}} onClick={this.vote}> */}\r\n              {/* Candidate Avatar */}\r\n              {/* <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/></div> */}\r\n              {/* Candidate Details */}\r\n              {/* <div className=\"single_advisor_details_info\">\r\n                                        <h6>Simon Jackson</h6>\r\n                                        <p className=\"designation\">Candidate symbol</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n            </div>\r\n          </div>\r\n        </body>\r\n      </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Candidates;\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Homepage.js",["129"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Election.js",["130","131"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Signin.jsx",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Layout.js",["132"],"import React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nexport default (props) =>{\r\n    return (\r\n        <div>\r\n            <Header />\r\n                {props.children}\r\n            <Footer />\r\n        </div>\r\n    )\r\n}","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\web3.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\WinnerCandidate.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Footer2.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Navbar2.0.js",["133","134","135"],"import React, { Component } from \"react\";\r\nimport logo from \"../imgs/logo.png\"\r\nimport logoutIcon from '../imgs/logout.png'\r\n\r\nclass Navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav\r\n          style={{ backgroundColor: \"#f7f7f7\" }}\r\n          className=\"navbar navbar-expand-lg navbar-light\"\r\n        >\r\n          <div class=\"container px-4 px-lg-5\">\r\n            <a class=\"navbar-brand\" href=\"#!\">\r\n              DEVS\r\n            </a>\r\n            <img src={logo} height=\"35px\" width=\"35px\" />\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul class=\"navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4\">\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link active ml-5\" aria-current=\"page\" href=\"#!\">\r\n                    Home\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link active ml-2\" aria-current=\"page\" href=\"#!\">\r\n                    Elections\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n              <ul class=\"navbar-nav ml-auto\">\r\n                <li class=\"nav-item\">\r\n                  <a href=\"#\" class=\"nav-link \">\r\n                  <img src={logoutIcon} height=\"25px\" width=\"25px\"/>                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link active\" aria-current=\"page\" href=\"#!\">\r\n                    Logout\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n\r\n// /home/saleh/Desktop/Demo_ch1/my-first-app/src/components/Navbar.jsx\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\LoserCandidates.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Header.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Footer.js",["136","137"],"import Footer from 'rc-footer';\r\nimport 'rc-footer/assets/index.css';\r\n\r\nexport default () =>{\r\n    return (\r\n        <div style={{position: \"fixed\", bottom: 0, width: \"100%\"}}>\r\n          <Footer\r\n              className=\"footer\"\r\n              columns={[\r\n              {\r\n                icon: (\r\n                  <img src=\"https://www.flaticon.com/svg/vstatic/svg/3661/3661733.svg?token=exp=1619391411~hmac=21fcd2d91c800f34ded6dd598fb59a2c\" />\r\n                ),\r\n                title: 'Blockchain E-Voting System',\r\n                url: 'https://yuque.com',\r\n                description: 'AS',\r\n                openExternal: true,\r\n              },\r\n              ]}\r\n              bottom=\"© 2020-2021\"\r\n          />\r\n        </div>\r\n      )\r\n}\r\n",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":13},{"ruleId":"142","severity":1,"message":"146","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"147","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":14},{"ruleId":"142","severity":1,"message":"148","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"149","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":20},{"ruleId":"142","severity":1,"message":"150","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":15},{"ruleId":"142","severity":1,"message":"151","line":53,"column":11,"nodeType":"144","messageId":"145","endLine":53,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":147,"column":60,"nodeType":"154","messageId":"155","endLine":147,"endColumn":66},{"ruleId":"142","severity":1,"message":"156","line":6,"column":11,"nodeType":"144","messageId":"145","endLine":6,"endColumn":28},{"ruleId":"142","severity":1,"message":"157","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":153,"column":27,"nodeType":"160","endLine":156,"endColumn":29},{"ruleId":"142","severity":1,"message":"161","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":9,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":6},{"ruleId":"142","severity":1,"message":"166","line":69,"column":19,"nodeType":"144","messageId":"145","endLine":69,"endColumn":27},{"ruleId":"167","severity":1,"message":"168","line":4,"column":1,"nodeType":"169","endLine":12,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":18,"column":13,"nodeType":"160","endLine":18,"endColumn":58},{"ruleId":"170","severity":1,"message":"171","line":45,"column":19,"nodeType":"160","endLine":45,"endColumn":49},{"ruleId":"158","severity":1,"message":"159","line":46,"column":19,"nodeType":"160","endLine":46,"endColumn":69},{"ruleId":"167","severity":1,"message":"168","line":4,"column":1,"nodeType":"169","endLine":24,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":12,"column":19,"nodeType":"160","endLine":12,"endColumn":149},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Admin' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Layout' is defined but never used.","'Component' is defined but never used.","'ListItemIcon' is defined but never used.","'Divider' is defined but never used.","'startElection' is assigned a value but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'componentDidMount' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'election' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]