<<<<<<< HEAD
[{"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/index.js":"1","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/reportWebVitals.js":"2","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/App.js":"3","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/ballot.js":"4","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Candidates.js":"5","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/RegisterForm.js":"6","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/LoginForm.js":"7","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Homepage.js":"8","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/NewCandidate.js":"9","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Admin.js":"10","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/AddUser.js":"11","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/TestAdmin.js":"12","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/RemoveCandidate.js":"13","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ForgotPassword.js":"14","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ConfirmEmail.js":"15","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ConfirmNewPassword.js":"16","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/web3.js":"17","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Layout.js":"18","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Header.js":"19","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Footer.js":"20","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Signin.jsx":"21","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Election.js":"22","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Footer2.js":"23","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Navbar2.0.js":"24","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/WinnerCandidate.js":"25","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/LoserCandidates.js":"26"},{"size":635,"mtime":1625242955478,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1625238340723,"results":"29","hashOfConfig":"28"},{"size":4940,"mtime":1625242223974,"results":"30","hashOfConfig":"28"},{"size":2393,"mtime":1625238340723,"results":"31","hashOfConfig":"28"},{"size":7142,"mtime":1625238340723,"results":"32","hashOfConfig":"28"},{"size":4848,"mtime":1625238340723,"results":"33","hashOfConfig":"28"},{"size":4826,"mtime":1625238340723,"results":"34","hashOfConfig":"28"},{"size":8761,"mtime":1625238340723,"results":"35","hashOfConfig":"28"},{"size":4573,"mtime":1625238340723,"results":"36","hashOfConfig":"28"},{"size":4780,"mtime":1625238340723,"results":"37","hashOfConfig":"28"},{"size":5606,"mtime":1625238340723,"results":"38","hashOfConfig":"28"},{"size":4420,"mtime":1625238340723,"results":"39","hashOfConfig":"28"},{"size":5111,"mtime":1625238340723,"results":"40","hashOfConfig":"28"},{"size":4381,"mtime":1625238340723,"results":"41","hashOfConfig":"28"},{"size":3616,"mtime":1625238340723,"results":"42","hashOfConfig":"28"},{"size":5721,"mtime":1625238340723,"results":"43","hashOfConfig":"28"},{"size":502,"mtime":1625238340723,"results":"44","hashOfConfig":"28"},{"size":244,"mtime":1625238340723,"results":"45","hashOfConfig":"28"},{"size":1977,"mtime":1625238340723,"results":"46","hashOfConfig":"28"},{"size":731,"mtime":1625238340723,"results":"47","hashOfConfig":"28"},{"size":1737,"mtime":1625241863256,"results":"48","hashOfConfig":"28"},{"size":520,"mtime":1625244662374,"results":"49","hashOfConfig":"28"},{"size":421,"mtime":1625241846057,"results":"50","hashOfConfig":"28"},{"size":2129,"mtime":1625241968963,"results":"51","hashOfConfig":"28"},{"size":2049,"mtime":1625242316127,"results":"52","hashOfConfig":"28"},{"size":2967,"mtime":1625244778100,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fc1q9u",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/index.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/reportWebVitals.js",[],["116","117"],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/App.js",["118"],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/ballot.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Candidates.js",["119","120","121"],"import React, { Component } from \"react\";\nimport web3 from \"../web3\";\nimport ballot from \"../ballot\";\nimport swal from \"sweetalert\";\nimport \"../static/candidate_styles.css\";\nimport axios from \"axios\";\nimport jwt from \"jsonwebtoken\";\nimport \"../static/styles.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Layout from \"./Layout\";\n\nclass Candidates extends Component {\n  checkIfAuthenticated() {\n    const token = localStorage.getItem(\"token\");\n    let decoded;\n    if (!token) {\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    try {\n      jwt.verify(token);\n    } catch (err) {\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n  }\n  componentDidMount() {\n    this.checkIfAuthenticated();\n  }\n\n  state = {\n    index: -1,\n  };\n\n  componentDidMount() {\n    console.log(this.props.token);\n    //alert(this.props.candidates);\n  }\n\n  vote = (index, event) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once your vote has been cast, it cannot be changed!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willVote) => {\n      if (willVote) {\n        this.voteYesCallback(index, event);\n        //swal(\"Candidate Index: \" + index);\n      } else {\n        swal(\"You did not cast a vote.\");\n      }\n    });\n  };\n\n  voteYesCallback = async (index, event) => {\n    //event.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n\n    await ballot.methods\n      .vote(index)\n      .send({\n        from: accounts[0],\n        gas: \"100000\",\n      })\n      .then((hasVoted) => {\n        if (hasVoted) {\n          swal(\"Your vote was successfully cast!\", {\n            icon: \"success\",\n          });\n        } else {\n          swal(\"Error\", \"There was an error when casting your vote!\", {\n            icon: \"error\",\n          });\n        }\n      });\n\n    axios\n      .put(\"http://localhost:5000/api/users/voted\", \"\", {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        if (res.status === 200)\n          swal(\"Success!\", \"Your vote has been cast successfully\", \"success\");\n        else if (res.status === 404) swal(\"Error!\", \"User not found\", \"error\");\n      })\n      .catch(() =>\n        swal(\"Error!\", \"Failed to vote, please try again later\", \"error\")\n      );\n  };\n\n  render() {\n    return (\n      <Layout>\n      <div>\n        <head>\n          <link\n            href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n            rel=\"stylesheet\"\n            id=\"bootstrap-css\"\n          />\n          <link\n            href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\n            rel=\"stylesheet\"\n          />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"../static/candidate_styles.css\"\n          />\n        </head>\n\n        <body>\n          <div className=\"container\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-12 col-sm-8 col-lg-6\">\n                {/* Section Heading */}\n                <div\n                  className=\"section_heading text-center wow fadeInUp\"\n                  data-wow-delay=\"0.2s\"\n                  style={{\n                    visibility: \"visible\",\n                    animationDelay: 0.2,\n                    animationName: \"fadeInUp\",\n                  }}\n                >\n                  <h3 style={{fontSize: \"40px\"}}>Candidates</h3>\n                  <p style={{fontSize: \"25px\"}} >\n                    Please cast your vote for one of the available candidates.\n                  </p>\n                  <div className=\"line\"></div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              {this.props.candidates.length > 0\n                ? this.props.candidates.map((candidate, index) => (\n                    // Candidate\n                    <div className=\"col-12 col-sm-6 col-lg-3\">\n                      <div\n                        className=\"single_advisor_profile wow fadeInUp\"\n                        data-wow-delay=\"0.2s\"\n                        style={{\n                          visibility: \"visible\",\n                          animationDelay: 0.2,\n                          animationName: \"fadeInUp\",\n                        }}\n                        onClick={() => this.vote(index)}\n                        key={index}\n                        data-index={index}\n                      >\n                        {/* Candidate Avatar */}\n                        <div className=\"advisor_thumb\">\n                          <img\n                            //src=\"https://bootdey.com/img/Content/avatar/avatar1.png\"\n                            src={candidate.photo}\n                          />\n                        </div>\n                        {/* Candidate Details */}\n                        <div className=\"single_advisor_details_info\">\n                          <h6>{candidate.name}</h6>\n                          <p className=\"designation\">{candidate.symbol}</p>\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                : \"There are currently no candidates\"}\n\n              {/* Candidate */}\n              {/* <div className=\"col-12 col-sm-6 col-lg-3\">\n                                <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\" style={{visibility: \"visible\", animationDelay: 0.2, animationName: \"fadeInUp\"}} onClick={this.vote}> */}\n              {/* Candidate Avatar */}\n              {/* <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/></div> */}\n              {/* Candidate Details */}\n              {/* <div className=\"single_advisor_details_info\">\n                                        <h6>Simon Jackson</h6>\n                                        <p className=\"designation\">Candidate symbol</p>\n                                    </div>\n                                </div>\n                            </div> */}\n\n              {/* Candidate */}\n              {/* <div className=\"col-12 col-sm-6 col-lg-3\">\n                                <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\" style={{visibility: \"visible\", animationDelay: 0.2, animationName: \"fadeInUp\"}} onClick={this.vote}> */}\n              {/* Candidate Avatar */}\n              {/* <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/></div> */}\n              {/* Candidate Details */}\n              {/* <div className=\"single_advisor_details_info\">\n                                        <h6>Simon Jackson</h6>\n                                        <p className=\"designation\">Candidate symbol</p>\n                                    </div>\n                                </div>\n                            </div> */}\n            </div>\n          </div>\n        </body>\n      </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Candidates;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/RegisterForm.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/LoginForm.js",["122"],"import { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"semantic-ui-react\";\nimport swal from \"sweetalert\";\nimport \"../static/styles.css\";\nimport Layout from \"./Layout\";\nimport \"../static/styles.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nconst atob = require(\"atob\");\n\nconst axios = require(\"axios\");\n\nconst parseJwt = (token) => {\n  try {\n    return JSON.parse(atob(token.split(\".\")[1]));\n  } catch (e) {\n    return null;\n  }\n};\n\nclass LoginForm extends Component {\n  login = (event) => {\n    event.preventDefault();\n\n    const param = {\n      nationalID: event.target.nationalID.value,\n      password: event.target.password.value,\n    };\n\n    axios\n      .post(\"http://localhost:5000/api/auth\", param)\n      .then((res) => {\n        if (res.status === 200) {\n          const token = res.data;\n          localStorage.setItem(\"token\", token);\n          const tokenInfo = parseJwt(token);\n          swal(\"Success!\", \"You've been logged in successfully!\", \"success\");\n          if (tokenInfo.isAdmin) window.location.pathname = \"/admin\";\n          else window.location.pathname = \"/candidates\";\n        }\n      })\n      .catch(() => {\n        swal(\"Error!\", \"Failed to log in!\", \"error\");\n      });\n  };\n\n  render() {\n    return (\n      <Layout>\n      <div>\n        <head>\n          <link\n            href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n            rel=\"stylesheet\"\n            id=\"bootstrap-css\"\n          />\n          <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n          <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n          <link\n            rel=\"stylesheet\"\n            href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\n            integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\n            crossorigin=\"anonymous\"\n          />\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/styles.css\" />\n        </head>\n\n        <body >\n          <div className=\"container\" style={{margin: \"10% 20%\"}}>\n            <div className=\"d-flex justify-content-center h-100\">\n              <div className=\"card\">\n                <div class=\"card-header\" style={{backgroundColor: \"#ffc312\"}}>\n                  <h3>Sign In</h3>\n                </div>\n\n                <div className=\"card-body\" style={{backgroundColor: \"#333\"}}>\n                  {/* Login Form */}\n                  <form onSubmit={this.login}>\n                    {/* National ID Input Group */}\n                    <div className=\"input-group form-group\">\n                      <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                          <i className=\"fas fa-user\"></i>\n                        </span>\n                      </div>\n                      <input\n                        type=\"text\"\n                        name=\"nationalID\"\n                        class=\"form-control\"\n                        placeholder=\"National ID\"\n                        required\n                      ></input>\n                    </div>\n\n                    {/* Password Input Group */}\n                    <div className=\"input-group form-group\">\n                      <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                          <i className=\"fas fa-key\"></i>\n                        </span>\n                      </div>\n                      <input\n                        type=\"password\"\n                        name=\"password\"\n                        class=\"form-control\"\n                        placeholder=\"Password\"\n                        required\n                      ></input>\n                    </div>\n\n                    {/* Login Button */}\n                    <div className=\"form-group\">\n                      <input\n                        type=\"submit\"\n                        value=\"Login\"\n                        class=\"btn float-right login_btn\"\n                      />\n                    </div>\n                  </form>\n                </div>\n\n                {/* Card Footer */}\n                <div className=\"card-footer\" style={{backgroundColor: \"#ffc312\"}}>\n                  <div className=\"d-flex justify-content-center links\">\n                    Don't have an account?\n                    <Link to=\"/register\"> Register now!</Link>\n                  </div>\n                  <div class=\"d-flex justify-content-center\">\n                    <Link to=\"/forgot_password\">Forgot your password?</Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </body>\n      </div>\n      </Layout>\n    );\n  }\n}\n\nexport default LoginForm;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Homepage.js",["123"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport Layout from './Layout';\n\nconst Homepage = () => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n            maxWidth: '36ch',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }));\n\n    const classes = useStyles();\n\n    const goToElection = (e) => {\n        alert(e.target.parent);\n    }\n\n    const goToOngoingElection = () => {\n        window.location.pathname = \"/candidates\";\n    }\n\n    return (\n        <Layout>\n            <div>\n                <head>\n                    <link\n                        href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n                        rel=\"stylesheet\"\n                        id=\"bootstrap-css\"\n                    />\n                    <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n                    <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n                    <link\n                        rel=\"stylesheet\"\n                        href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\n                        integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\n                        crossorigin=\"anonymous\"\n                    />\n                </head>\n\n                <body>\n                    {/* Ongoing Election Container*/}\n                    <div style={{margin: \"auto\", marginTop: \"50px\", marginBottom: \"25px\", width: \"25%\"}}>\n                        <h2>Ongoing Election</h2>\n\n                        <List className={classes.root}>\n                            {/* Ongoing election */}\n                            <ListItem alignItems=\"flex-start\" onClick={goToOngoingElection}>\n                                {/* Question Mark indicating no one has won yet? */}\n                                <ListItemAvatar>\n                                <Avatar alt=\"?\" src=\"/static/images/avatar/1.jpg\" />\n                                </ListItemAvatar>\n                                {/* Election details */}\n                                <ListItemText\n                                primary=\"US Presidential Election 2024\"\n                                secondary={\n                                    <React.Fragment>\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        You have not cast your vote yet! <br/>\n                                    </Typography>\n                                    {\"Current status: ongoing\"} <br/>\n                                    {\"Total number of votes so far: 572338\"}\n                                    </React.Fragment>\n                                }\n                                />\n                            </ListItem>\n                        </List>\n                    </div>\n\n                    <Divider variant=\"inset\"/>\n\n                    {/* Previous Elections Container*/}\n                    <div style={{margin: \"0 auto\", width: \"25%\"}}>\n                        <h2> Previous Elections </h2>\n\n                        {/* TODO: Map elections from DB to this list, and add their indexes just like in the Candidates components */}\n\n                        {/* List of elections */}\n                        <List className={classes.root}>\n\n                            {/* First election */}\n                            <ListItem alignItems=\"flex-start\" name=\"Joe Biden's ID\" onClick={goToElection}>\n                                {/* Candidate Avatar */}\n                                <ListItemAvatar>\n                                <Avatar alt=\"Joe Biden\" src=\"/static/images/avatar/1.jpg\" />\n                                </ListItemAvatar>\n                                {/* Election details */}\n                                <ListItemText\n                                primary=\"US Presidential Election 2020\"\n                                secondary={\n                                    <React.Fragment>\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        Winner: Joe Biden <br/>\n                                    </Typography>\n                                    {\"Number of votes for winner: 25000\"} <br/>\n                                    {\"Total number of votes: 137000\"}\n                                    </React.Fragment>\n                                }\n                                />\n                            </ListItem>\n                            \n                            <Divider variant=\"inset\" component=\"li\" />\n\n                            {/* Second election */}\n                            <ListItem alignItems=\"flex-start\">\n                                {/* Candidate Avatar */}\n                                <ListItemAvatar>\n                                <Avatar alt=\"Donald Trump\" src=\"/static/images/avatar/1.jpg\" />\n                                </ListItemAvatar>\n                                {/* Election details */}\n                                <ListItemText\n                                primary=\"US Presidential Election 2016\"\n                                secondary={\n                                    <React.Fragment>\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        Winner: Donald Trump <br/>\n                                    </Typography>\n                                    {\"Number of votes for winner: 23471\"} <br/>\n                                    {\"Total number of votes: 128632\"}\n                                    </React.Fragment>\n                                }\n                                />\n                            </ListItem>\n                            \n                            <Divider variant=\"inset\" component=\"li\" />\n                            \n                            {/* Third election */}\n                            <ListItem alignItems=\"flex-start\">\n                                {/* Candidate Avatar */}\n                                <ListItemAvatar>\n                                <Avatar alt=\"Barack Obama\" src=\"/static/images/avatar/1.jpg\" />\n                                </ListItemAvatar>\n                                {/* Election details */}\n                                <ListItemText\n                                primary=\"US Presidential Election 2012\"\n                                secondary={\n                                    <React.Fragment>\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        Winner: Barack Obama <br/>\n                                    </Typography>\n                                    {\"Number of votes for winner: 25391\"} <br/>\n                                    {\"Total number of votes: 208516\"}\n                                    </React.Fragment>\n                                }\n                                />\n                            </ListItem>\n\n                        </List>\n                    </div>\n                </body>\n            </div>\n        </Layout>\n    )\n}\n\nexport default Homepage\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/NewCandidate.js",["124"],"import React from \"react\";\nimport { Form, Button, Message, Image } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport web3 from \"../web3\";\nimport ballot from \"../ballot\";\nimport Layout from \"./Layout\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport atob from \"atob\";\n\nclass NewCandidate extends React.Component {\n  checkIfAuthenticated() {\n    const token = localStorage.getItem(\"token\");\n    let decoded;\n    if (!token) {\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    try {\n      decoded = JSON.parse(atob(token.split(\".\")[1]));\n    } catch (err) {\n      console.log(err.message);\n      swal(\"Error!\", \"An error has occured!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    if (!decoded.isAdmin) {\n      swal(\"Error!\", \"Unauthorized!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n  }\n  componentDidMount() {\n    this.checkIfAuthenticated();\n  }\n\n  state = {\n    candidateName: \"\",\n    candidateSymbol: \"\",\n    candidatePhoto: \"\",\n    errorMessage: \"\",\n    loading: false,\n    index: -1,\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    const storeInBlockchain = async () => {\n      this.setState({ errorMessage: \"\", loading: true });\n      try {\n        const accounts = await web3.eth.getAccounts();\n\n        await ballot.methods.addCandidate(this.state.candidateName).send({\n          from: accounts[0],\n          gas: 1000000,\n        });\n        this.setState({ loading: false });\n        swal(\n          \"Success!\",\n          \"Candidate added to the election successfully!\",\n          \"success\"\n        );\n        window.location.pathname = \"/new_candidate\";\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n\n    const param = {\n      name: this.state.candidateName,\n      symbol: this.state.candidateSymbol,\n      photo: this.state.candidatePhoto,\n    };\n\n    axios\n      .post(\"http://localhost:5000/api/candidates\", param, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          this.setState({ index: res.index });\n          storeInBlockchain();\n        } else if (res.status === 401)\n          swal(\"Error!\", \"Unauthenticated!\", \"error\");\n        else if (res.status === 403) swal(\"Error!\", \"Unauthorized!\", \"error\");\n      })\n      .catch((err) => {\n        swal(\"Error!\", \"Failed to add candidate!\", \"error\");\n        console.log(err.message);\n      });\n  };\n\n  imageHandler = (e) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        this.setState({ candidatePhoto: reader.result });\n      }\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  render() {\n    const { candidatePhoto } = this.state;\n    return (\n      <Layout>\n        <div class=\"new_candidate_form\">\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n            <Form.Field>\n              <label>Name</label>\n              <input\n                placeholder=\"Candidate Name\"\n                value={this.state.candidateName}\n                onChange={(event) =>\n                  this.setState({ candidateName: event.target.value })\n                }\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Symbol</label>\n              <input\n                placeholder=\"Candidate Symbol\"\n                value={this.state.candidateSymbol}\n                onChange={(event) =>\n                  this.setState({ candidateSymbol: event.target.value })\n                }\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Photo</label>\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                name=\"image-upload\"\n                id=\"input\"\n                onChange={this.imageHandler}\n              />\n            </Form.Field>\n            <div className=\"img-holder\">\n              <Image src={candidatePhoto} alt=\"\" size=\"medium\" rounded />\n            </div>\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n            <Button\n              fluid\n              secondary\n              style={{ margin: \"0 auto\", display: \"block\", margin: \"10% 0px\" }}\n              loading={this.state.loading}\n              type=\"submit\"\n            >\n              Add\n            </Button>\n          </Form>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default NewCandidate;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Admin.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/AddUser.js",["125"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport atob from \"atob\";\nimport \"../static/styles.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Layout from \"./Layout\";\n\nconst axios = require(\"axios\");\n\nclass AddUser extends Component {\n  checkIfAuthenticated() {\n    const token = localStorage.getItem(\"token\");\n    let decoded;\n    if (!token) {\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    try {\n      decoded = JSON.parse(atob(token.split(\".\")[1]));\n    } catch (err) {\n      console.log(err.message);\n      swal(\"Error!\", \"An error has occured!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    if (!decoded.isAdmin) {\n      swal(\"Error!\", \"Unauthorized!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n  }\n  componentDidMount() {\n    this.checkIfAuthenticated();\n  }\n\n  addUser = (event) => {\n    event.preventDefault();\n\n    // Creating a new user\n    const param = {\n      nationalID: event.target.nationalID.value,\n      email: event.target.email.value,\n      isRegistered: false,\n      isAdmin: document.getElementById(\"isAdmin\").checked,\n    };\n\n    axios\n      .post(\"http://localhost:5000/api/users\", param, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          swal(\"Success!\", \"User added successfully!\", \"success\");\n          window.location.pathname = \"/admin\";\n        }\n      })\n      .catch(() => swal(\"Error!\", \"Adding user failed!\", \"error\"));\n  };\n\n  render() {\n    return (\n      <Layout>\n      <div>\n        <head>\n          <link\n            href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n            rel=\"stylesheet\"\n            id=\"bootstrap-css\"\n          />\n          <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n          <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n          <link\n            rel=\"stylesheet\"\n            href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\n            integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\n            crossorigin=\"anonymous\"\n          />\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/styles.css\" />\n        </head>\n\n        <body>\n          <div className=\"container\" style={{margin: \"10% 20%\"}}>\n            {/* Card Container */}\n            <div className=\"d-flex justify-content-center h-100\">\n              <div className=\"card\">\n                {/* Card Header */}\n                <div class=\"card-header\" style={{backgroundColor: \"#ffc312\"}}>\n                  <h3>Add User</h3>\n                </div>\n\n                {/* Card */}\n                <div className=\"card-body\" style={{backgroundColor: \"#333\"}}>\n                  {/* Add User Form */}\n                  <form onSubmit={this.addUser}>\n                    {/* National ID Input Group */}\n                    <div className=\"input-group form-group\">\n                      <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                          <i className=\"fas fa-user\"></i>\n                        </span>\n                      </div>\n                      <input\n                        type=\"text\"\n                        name=\"nationalID\"\n                        class=\"form-control\"\n                        placeholder=\"National ID\"\n                        required\n                      ></input>\n                    </div>\n\n                    {/* Email Input Group */}\n                    <div className=\"input-group form-group\">\n                      <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                          <i className=\"fas fa-envelope\"></i>\n                        </span>\n                      </div>\n                      <input\n                        type=\"text\"\n                        name=\"email\"\n                        class=\"form-control\"\n                        placeholder=\"Email\"\n                        required\n                      ></input>\n                    </div>\n\n                    {/* isAdmin Input Group */}\n                    <div>\n                      <div className=\"input-group-prepend\">\n                        <span\n                          className=\"input-group-text\"\n                          style={{ width: \"10%\" }}\n                        >\n                          <i className=\"fas fa-user-cog\"></i>\n                        </span>\n                      </div>\n                      <div className=\"row align-items-center remember\">\n                        <input\n                          id=\"isAdmin\"\n                          name=\"isAdmin\"\n                          type=\"checkbox\"\n                        ></input>\n                        <label htmlFor=\"isAdmin\">Is Admin?</label>\n                      </div>\n                    </div>\n\n                    {/* Add User Button */}\n                    <div className=\"form-group\">\n                      <input\n                        type=\"submit\"\n                        value=\"Add\"\n                        class=\"btn float-right login_btn\"\n                      />\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </body>\n      </div>\n      </Layout>\n    );\n  }\n}\n\nexport default AddUser;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/TestAdmin.js",["126","127","128","129"],"import React, { Component, useEffect } from \"react\";\nimport swal from \"sweetalert\";\nimport atob from \"atob\";\nimport Layout from \"./Layout\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst TestAdmin = () => {\n    const checkIfAuthenticated = () => {\n        const token = localStorage.getItem(\"token\");\n        let decoded;\n        if (!token) {\n            swal(\"Error!\", \"Unauthenticated!\", \"error\");\n            window.location.pathname = \"/login\";\n        }\n        try {\n            decoded = JSON.parse(atob(token.split(\".\")[1]));\n        } catch (err) {\n            console.log(err.message);\n            swal(\"Error!\", \"An error has occured!\", \"error\");\n            window.location.pathname = \"/login\";\n        }\n        if (!decoded.isAdmin) {\n            swal(\"Error!\", \"Unauthorized!\", \"error\");\n            window.location.pathname = \"/login\";\n        }\n    };\n\n    useEffect(() => {\n        checkIfAuthenticated();\n    }, []);\n\n    // Navigating to the NewCandidate.js component\n    const addCandidate = () => {\n        window.location.pathname = \"/new_candidate\";\n    };\n\n    // Navigating to the RemoveCandidate.js component\n    const removeCandidate = () => {\n        window.location.pathname = \"/remove_candidate\";\n    };\n\n    const addUser = () => {\n        window.location.pathname = \"/add_user\";\n    };\n\n    /* TODO: This function should start a new election \n    by accessing the Blockchain and adding a new election to it*/\n    const startElection = () => {\n        swal(\"Not implemented yet!!! xD\", {\n            icon: \"error\",\n        });\n    };\n\n    /* TODO: This function should end an on-going election \n    by accessing the Blockchain and removing the running election*/\n    const endElection = () => {\n        swal(\"Not implemented yet!!! xD\", {\n            icon: \"error\",\n        });\n    };\n\n    const useStyles = makeStyles(() => ({\n            root: {\n                width: '100%',\n                maxWidth: 360,\n                backgroundColor: \"#333\",\n            },\n        }));\n\n    const classes = useStyles();\n  \n    return(\n        <Layout>\n            <div>\n                <head>\n                    <link\n                    href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n                    rel=\"stylesheet\"\n                    id=\"bootstrap-css\"\n                    />\n                    <link\n                    href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\n                    rel=\"stylesheet\"\n                    />\n                    <link\n                    href=\"../static/button_styles.css\"\n                    rel=\"stylesheet\"\n                    />\n                </head>\n\n                <body>\n                    <div className={classes.root} style={{margin: \"5% auto\"}} >\n                        {/* List of admin control buttons */}\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\n                            {/* Add Candidate Button */}\n                            <ListItem button onClick={addCandidate}>\n                                <ListItemText primary=\"Add Candidate\" style={{color: \"#ffc312\"}}/>\n                            </ListItem>\n\n                            {/* Remove Candidate Button */}\n                            <ListItem button onClick={removeCandidate}>\n                                <ListItemText primary=\"Remove Candidate\" style={{color: \"white\"}}/>\n                            </ListItem>\n\n                            {/* Add User Button */}\n                            <ListItem button onClick={addUser}>\n                                <ListItemText primary=\"Add User\" style={{color: \"#ffc312\"}}/>\n                            </ListItem>\n\n                            {/* End Election Button */}\n                            <ListItem button onClick={endElection}>\n                                <ListItemText primary=\"End Election\" style={{color: \"white\"}}/>\n                            </ListItem>\n                        </List>\n                    </div>\n                </body>\n            </div>\n        </Layout>\n    );\n  }\n\nexport default TestAdmin;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/RemoveCandidate.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ForgotPassword.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ConfirmEmail.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ConfirmNewPassword.js",["130"],"import React from 'react';\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\n\nconst ConfirmNewPassword = () => {\n    const componentDidMount = () => {\n    alert(\"Please check your email for a confirmation code.\");\n  }\n\n  // When the user enters the confirmation code then clicks confirm\n  const confirm = (event) => {\n    event.preventDefault();\n\n    const newPassword = event.target.newPassword.value;\n    const newPasswordConfirmation = event.target.newPasswordConfirmation.value;\n\n    if(newPassword !== newPasswordConfirmation){\n        swal(\"Error!\", \"Please make sure you re-enter your password correctly!\", \"error\");\n        return;\n    }\n\n    //Retrieve the National ID from the ForgotPassword component, and add the password\n    const param = {\n      nationalID: localStorage.getItem(\"nationalID\"),\n      password: newPassword,\n    };\n\n    // Check the confirmation code then change the user's password if the code is correct\n    if (event.target.confirmationCode.value === localStorage.getItem(\"code\")) {\n      axios\n        .put(\"http://localhost:5000/api/users\", param)\n        .then((res) => {\n          if (res.status === 200) {\n            swal(\"Success!\", \"Password Changed Successfully\", \"success\");\n            localStorage.removeItem(\"code\");\n            window.location.pathname = \"/login\";\n          }\n        })\n        .catch((error) => swal(\"Error!\", error.message, \"error\"));\n    } else {\n      swal(\"Error!\", \"Invalid Code\", \"error\");\n    }\n  };\n\n    return (\n        <div>\n            <head>\n                <link\n                    href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n                    rel=\"stylesheet\"\n                    id=\"bootstrap-css\"\n                />\n                <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n                <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n                <link\n                    rel=\"stylesheet\"\n                    href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\n                    integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\n                    crossorigin=\"anonymous\"\n                />\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/styles.css\" />\n            </head>\n\n            <body>\n            <div className=\"container\" style={{ margin: \"auto\", width: \"auto\" }}>\n                {/* Card Container */}\n                <div className=\"d-flex justify-content-center h-100\">\n                <div className=\"card\">\n                    {/* Card Header */}\n                    <div class=\"card-header\">\n                    <h3>New Password Confirmation</h3>\n                    </div>\n\n                    {/* Card */}\n                    <div className=\"card-body\">\n                    {/* Confirmation Form */}\n                    <form onSubmit={confirm}>\n                        {/* New Password Input Group */}\n                        <div className=\"input-group form-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                            <i class=\"fas fa-shield-alt\"></i>\n                            </span>\n                        </div>\n                        <input\n                            type=\"password\"\n                            name=\"newPassword\"\n                            class=\"form-control\"\n                            placeholder=\"Please enter your new password...\"\n                            required\n                        ></input>\n                        </div>\n\n\n                        {/* New Password Confirmation Input Group */}\n                        <div className=\"input-group form-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                            <i class=\"fas fa-shield-alt\"></i>\n                            </span>\n                        </div>\n                        <input\n                            type=\"password\"\n                            name=\"newPasswordConfirmation\"\n                            class=\"form-control\"\n                            placeholder=\"Please re-enter your new password...\"\n                            required\n                        ></input>\n                        </div>\n                        \n                        {/* Confirmation Code Input Group */}\n                        <div className=\"input-group form-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                            <i class=\"fas fa-shield-alt\"></i>\n                            </span>\n                        </div>\n                        <input\n                            type=\"text\"\n                            name=\"confirmationCode\"\n                            class=\"form-control\"\n                            placeholder=\"Please enter your confirmation code...\"\n                            required\n                        ></input>\n                        </div>\n\n                        {/* Submit Button */}\n                        <div className=\"form-group\">\n                        <input\n                            type=\"submit\"\n                            value=\"Submit\"\n                            class=\"btn float-right login_btn\"\n                        />\n                        </div>\n                    </form>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </body>\n      </div>\n    )\n}\n\nexport default ConfirmNewPassword\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/web3.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Layout.js",["131"],"import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nexport default (props) =>{\n    return (\n        <div>\n            <Header />\n                {props.children}\n            <Footer />\n        </div>\n    )\n}","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Header.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Footer.js",["132","133"],"import Footer from 'rc-footer';\nimport 'rc-footer/assets/index.css';\n\nexport default () =>{\n    return (\n        <div style={{position: \"fixed\", bottom: 0, width: \"100%\"}}>\n          <Footer\n              className=\"footer\"\n              columns={[\n              {\n                icon: (\n                  <img src=\"https://www.flaticon.com/svg/vstatic/svg/3661/3661733.svg?token=exp=1619391411~hmac=21fcd2d91c800f34ded6dd598fb59a2c\" />\n                ),\n                title: 'Blockchain E-Voting System',\n                url: 'https://yuque.com',\n                description: 'AS',\n                openExternal: true,\n              },\n              ]}\n              bottom=\"© 2020-2021\"\n          />\n        </div>\n      )\n}\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Signin.jsx",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Election.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Footer2.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Navbar2.0.js",["134","135","136"],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/WinnerCandidate.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/LoserCandidates.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":13},{"ruleId":"141","severity":1,"message":"145","line":15,"column":9,"nodeType":"143","messageId":"144","endLine":15,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":35,"column":3,"nodeType":"148","messageId":"149","endLine":38,"endColumn":4},{"ruleId":"150","severity":1,"message":"151","line":159,"column":27,"nodeType":"152","endLine":162,"endColumn":29},{"ruleId":"141","severity":1,"message":"153","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":16},{"ruleId":"141","severity":1,"message":"153","line":10,"column":10,"nodeType":"143","messageId":"144","endLine":10,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":147,"column":60,"nodeType":"156","messageId":"149","endLine":147,"endColumn":66},{"ruleId":"141","severity":1,"message":"157","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":14},{"ruleId":"141","severity":1,"message":"158","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"159","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":20},{"ruleId":"141","severity":1,"message":"160","line":10,"column":8,"nodeType":"143","messageId":"144","endLine":10,"endColumn":15},{"ruleId":"141","severity":1,"message":"161","line":53,"column":11,"nodeType":"143","messageId":"144","endLine":53,"endColumn":24},{"ruleId":"141","severity":1,"message":"162","line":6,"column":11,"nodeType":"143","messageId":"144","endLine":6,"endColumn":28},{"ruleId":"163","severity":1,"message":"164","line":4,"column":1,"nodeType":"165","endLine":12,"endColumn":2},{"ruleId":"163","severity":1,"message":"164","line":4,"column":1,"nodeType":"165","endLine":24,"endColumn":2},{"ruleId":"150","severity":1,"message":"151","line":12,"column":19,"nodeType":"152","endLine":12,"endColumn":149},{"ruleId":"150","severity":1,"message":"151","line":18,"column":13,"nodeType":"152","endLine":18,"endColumn":58},{"ruleId":"166","severity":1,"message":"167","line":45,"column":19,"nodeType":"152","endLine":45,"endColumn":49},{"ruleId":"150","severity":1,"message":"151","line":46,"column":19,"nodeType":"152","endLine":46,"endColumn":69},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Admin' is defined but never used.","Identifier","unusedVar","'decoded' is defined but never used.","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'Link' is defined but never used.","'Component' is defined but never used.","'ListItemIcon' is defined but never used.","'Divider' is defined but never used.","'startElection' is assigned a value but never used.","'componentDidMount' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]
=======
[{"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\index.js":"1","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\reportWebVitals.js":"2","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\App.js":"3","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\ballot.js":"4","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\LoginForm.js":"5","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Admin.js":"6","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\NewCandidate.js":"7","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RemoveCandidate.js":"8","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RegisterForm.js":"9","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ConfirmEmail.js":"10","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\AddUser.js":"11","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Candidates.js":"12","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\web3.js":"13","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Layout.js":"14","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Footer.js":"15","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Header.js":"16","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ConfirmNewPassword.js":"17","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ForgotPassword.js":"18","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Homepage.js":"19","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\TestAdmin.js":"20"},{"size":517,"mtime":1625159818986,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1620124474433,"results":"23","hashOfConfig":"22"},{"size":4599,"mtime":1625224602802,"results":"24","hashOfConfig":"22"},{"size":2537,"mtime":1625226777499,"results":"25","hashOfConfig":"22"},{"size":4937,"mtime":1625242058594,"results":"26","hashOfConfig":"22"},{"size":4952,"mtime":1625226999556,"results":"27","hashOfConfig":"22"},{"size":4733,"mtime":1620178549502,"results":"28","hashOfConfig":"22"},{"size":5276,"mtime":1625226777501,"results":"29","hashOfConfig":"22"},{"size":4997,"mtime":1625227005451,"results":"30","hashOfConfig":"22"},{"size":3722,"mtime":1620178549501,"results":"31","hashOfConfig":"22"},{"size":5775,"mtime":1625227009673,"results":"32","hashOfConfig":"22"},{"size":7350,"mtime":1625226777500,"results":"33","hashOfConfig":"22"},{"size":527,"mtime":1620124474435,"results":"34","hashOfConfig":"22"},{"size":255,"mtime":1625219491643,"results":"35","hashOfConfig":"22"},{"size":755,"mtime":1625227008404,"results":"36","hashOfConfig":"22"},{"size":2050,"mtime":1625219052187,"results":"37","hashOfConfig":"22"},{"size":5980,"mtime":1625242037663,"results":"38","hashOfConfig":"22"},{"size":4509,"mtime":1625157784430,"results":"39","hashOfConfig":"22"},{"size":8951,"mtime":1625221451191,"results":"40","hashOfConfig":"22"},{"size":4547,"mtime":1625225102620,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1hmlgro",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\index.js",[],["88","89"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\reportWebVitals.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\App.js",["90"],"import { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ballot from \"./ballot\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport Candidates from \"./components/Candidates\";\r\nimport Homepage from \"./components/Homepage\";\r\nimport Admin from \"./components/Admin\";\r\nimport TestAdmin from \"./components/TestAdmin\";\r\nimport NewCandidate from \"./components/NewCandidate\";\r\nimport RemoveCandidate from \"./components/RemoveCandidate\";\r\nimport AddUser from \"./components/AddUser\";\r\nimport ConfirmEmail from \"./components/ConfirmEmail\";\r\nimport ForgotPassword from \"./components/ForgotPassword\";\r\nimport ConfirmNewPassword from \"./components/ConfirmNewPassword\";\r\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\r\nconst axios = require(\"axios\");\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handler = this.handleTokenChange.bind(this);\r\n  }\r\n\r\n  state = {\r\n    admin: \"\",\r\n    message: \"\",\r\n    candidateIndex: 0,\r\n    candidates: {},\r\n    token: \"\",\r\n    testProp: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const admin = await ballot.methods.admin().call();\r\n    this.setState({ admin });\r\n    this.getCandidates();\r\n  }\r\n\r\n  // This function should handle getting all candidates from the Db\r\n  async getCandidates() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/candidates\")\r\n      .then((res) => {\r\n        const candidates = res.data;\r\n        this.setState({ candidates });\r\n      })\r\n      .catch((err) => alert(err.message));\r\n  }\r\n\r\n  handleTokenChange = (token) => {\r\n    this.setState({ token });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          {/* Home Route*/}\r\n          <Route\r\n            exact path=\"/\"\r\n            render={() => (\r\n              <>\r\n                <Redirect to=\"/login\"/>\r\n              </>\r\n            )}\r\n          />\r\n\r\n          {/* Login Route*/}\r\n          <Route\r\n            path=\"/login\"\r\n            render={() => (\r\n              <>\r\n                <LoginForm\r\n                  tokenHandler={this.handleTokenChange}\r\n                  token={this.state.token}\r\n                />\r\n              </>\r\n            )}\r\n          />\r\n\r\n          {/* Register Route*/}\r\n          <Route\r\n            path=\"/register\"\r\n            render={() => (\r\n              <>\r\n                <RegisterForm token={this.state.token} />\r\n              </>\r\n            )}\r\n          />\r\n\r\n          {/* Elections Homepage Route*/}\r\n          <Route\r\n            path=\"/elections\"\r\n            render={() => (\r\n              <>\r\n                <Homepage token={this.state.token} />\r\n              </>\r\n            )}\r\n          />\r\n\r\n          {/* Admin Route*/}\r\n          <Route\r\n            path=\"/admin\"\r\n            render={() => (\r\n              <>\r\n                <TestAdmin token={this.state.token} />\r\n              </>\r\n            )}\r\n          />\r\n          \r\n          {/* New Candidate Route*/}\r\n          <Route\r\n            path=\"/new_candidate\"\r\n            render={() => (\r\n              <>\r\n                <NewCandidate token={this.state.token} />\r\n              </>\r\n            )}\r\n          />\r\n\r\n          {/* Remove Candidate Route*/}\r\n          <Route\r\n            path=\"/remove_candidate\"\r\n            render={() => (\r\n              <>\r\n                <RemoveCandidate\r\n                  candidates={this.state.candidates}\r\n                  token={this.state.token}\r\n                />\r\n              </>\r\n            )}\r\n          />\r\n\r\n          {/* Add User Route*/}\r\n          <Route\r\n            path=\"/add_user\"\r\n            render={() => (\r\n              <>\r\n                <AddUser token={this.state.token} />\r\n              </>\r\n            )}\r\n          />\r\n\r\n          {/* Candidates Route*/}\r\n          <Route\r\n            path=\"/candidates\"\r\n            render={() => (\r\n              <>\r\n                <Candidates\r\n                  candidates={this.state.candidates}\r\n                  token={this.state.token}\r\n                  admin={this.state.admin}\r\n                />\r\n              </>\r\n            )}\r\n          />\r\n\r\n          {/* Forgot Password Route*/}\r\n          <Route path=\"/forgot_password\" component={ForgotPassword} />\r\n\r\n          {/* Confirm New Password Code Route*/}\r\n          <Route path=\"/confirm_new_password\" component={ConfirmNewPassword} />\r\n\r\n          {/* Confirm Email Code Route*/}\r\n          <Route path=\"/confirm\" component={ConfirmEmail} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\ballot.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\LoginForm.js",["91","92"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Admin.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\NewCandidate.js",["93"],"import React from \"react\";\r\nimport { Form, Button, Message, Image } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport web3 from \"../web3\";\r\nimport ballot from \"../ballot\";\r\nimport Layout from \"./Layout\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport atob from \"atob\";\r\n\r\nclass NewCandidate extends React.Component {\r\n  checkIfAuthenticated() {\r\n    const token = localStorage.getItem(\"token\");\r\n    let decoded;\r\n    if (!token) {\r\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n    try {\r\n      decoded = JSON.parse(atob(token.split(\".\")[1]));\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      swal(\"Error!\", \"An error has occured!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n    if (!decoded.isAdmin) {\r\n      swal(\"Error!\", \"Unauthorized!\", \"error\");\r\n      window.location.pathname = \"/login\";\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.checkIfAuthenticated();\r\n  }\r\n\r\n  state = {\r\n    candidateName: \"\",\r\n    candidateSymbol: \"\",\r\n    candidatePhoto: \"\",\r\n    errorMessage: \"\",\r\n    loading: false,\r\n    index: -1,\r\n  };\r\n\r\n  onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const storeInBlockchain = async () => {\r\n      this.setState({ errorMessage: \"\", loading: true });\r\n      try {\r\n        const accounts = await web3.eth.getAccounts();\r\n\r\n        await ballot.methods.addCandidate(this.state.candidateName).send({\r\n          from: accounts[0],\r\n          gas: 1000000,\r\n        });\r\n        this.setState({ loading: false });\r\n        swal(\r\n          \"Success!\",\r\n          \"Candidate added to the election successfully!\",\r\n          \"success\"\r\n        );\r\n        window.location.pathname = \"/new_candidate\";\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    };\r\n\r\n    const param = {\r\n      name: this.state.candidateName,\r\n      symbol: this.state.candidateSymbol,\r\n      photo: this.state.candidatePhoto,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/candidates\", param, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({ index: res.index });\r\n          storeInBlockchain();\r\n        } else if (res.status === 401)\r\n          swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n        else if (res.status === 403) swal(\"Error!\", \"Unauthorized!\", \"error\");\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Error!\", \"Failed to add candidate!\", \"error\");\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  imageHandler = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        this.setState({ candidatePhoto: reader.result });\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  render() {\r\n    const { candidatePhoto } = this.state;\r\n    return (\r\n      <Layout>\r\n        <div class=\"new_candidate_form\">\r\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n            <Form.Field>\r\n              <label>Name</label>\r\n              <input\r\n                placeholder=\"Candidate Name\"\r\n                value={this.state.candidateName}\r\n                onChange={(event) =>\r\n                  this.setState({ candidateName: event.target.value })\r\n                }\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Symbol</label>\r\n              <input\r\n                placeholder=\"Candidate Symbol\"\r\n                value={this.state.candidateSymbol}\r\n                onChange={(event) =>\r\n                  this.setState({ candidateSymbol: event.target.value })\r\n                }\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Photo</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"image-upload\"\r\n                id=\"input\"\r\n                onChange={this.imageHandler}\r\n              />\r\n            </Form.Field>\r\n            <div className=\"img-holder\">\r\n              <Image src={candidatePhoto} alt=\"\" size=\"medium\" rounded />\r\n            </div>\r\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n            <Button\r\n              fluid\r\n              secondary\r\n              style={{ margin: \"0 auto\", display: \"block\", margin: \"10% 0px\" }}\r\n              loading={this.state.loading}\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCandidate;\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RemoveCandidate.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RegisterForm.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ConfirmEmail.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\AddUser.js",["94"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Candidates.js",["95","96","97"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\web3.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Layout.js",["98"],"import React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nexport default (props) =>{\r\n    return (\r\n        <div>\r\n            <Header />\r\n                {props.children}\r\n            <Footer />\r\n        </div>\r\n    )\r\n}","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Footer.js",["99","100"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Header.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ConfirmNewPassword.js",["101"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ForgotPassword.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Homepage.js",["102"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\nimport Layout from './Layout';\r\n\r\nconst Homepage = () => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n            maxWidth: '36ch',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        inline: {\r\n            display: 'inline',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const goToElection = (e) => {\r\n        alert(e.target.parent);\r\n    }\r\n\r\n    const goToOngoingElection = () => {\r\n        window.location.pathname = \"/candidates\";\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <head>\r\n                    <link\r\n                        href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\r\n                        rel=\"stylesheet\"\r\n                        id=\"bootstrap-css\"\r\n                    />\r\n                    <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n                    <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n\r\n                    <link\r\n                        rel=\"stylesheet\"\r\n                        href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\r\n                        integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\r\n                        crossorigin=\"anonymous\"\r\n                    />\r\n                </head>\r\n\r\n                <body>\r\n                    {/* Ongoing Election Container*/}\r\n                    <div style={{margin: \"auto\", marginTop: \"50px\", marginBottom: \"25px\", width: \"25%\"}}>\r\n                        <h2>Ongoing Election</h2>\r\n\r\n                        <List className={classes.root}>\r\n                            {/* Ongoing election */}\r\n                            <ListItem alignItems=\"flex-start\" onClick={goToOngoingElection}>\r\n                                {/* Question Mark indicating no one has won yet? */}\r\n                                <ListItemAvatar>\r\n                                <Avatar alt=\"?\" src=\"/static/images/avatar/1.jpg\" />\r\n                                </ListItemAvatar>\r\n                                {/* Election details */}\r\n                                <ListItemText\r\n                                primary=\"US Presidential Election 2024\"\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        You have not cast your vote yet! <br/>\r\n                                    </Typography>\r\n                                    {\"Current status: ongoing\"} <br/>\r\n                                    {\"Total number of votes so far: 572338\"}\r\n                                    </React.Fragment>\r\n                                }\r\n                                />\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n\r\n                    <Divider variant=\"inset\"/>\r\n\r\n                    {/* Previous Elections Container*/}\r\n                    <div style={{margin: \"0 auto\", width: \"25%\"}}>\r\n                        <h2> Previous Elections </h2>\r\n\r\n                        {/* TODO: Map elections from DB to this list, and add their indexes just like in the Candidates components */}\r\n\r\n                        {/* List of elections */}\r\n                        <List className={classes.root}>\r\n\r\n                            {/* First election */}\r\n                            <ListItem alignItems=\"flex-start\" name=\"Joe Biden's ID\" onClick={goToElection}>\r\n                                {/* Candidate Avatar */}\r\n                                <ListItemAvatar>\r\n                                <Avatar alt=\"Joe Biden\" src=\"/static/images/avatar/1.jpg\" />\r\n                                </ListItemAvatar>\r\n                                {/* Election details */}\r\n                                <ListItemText\r\n                                primary=\"US Presidential Election 2020\"\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        Winner: Joe Biden <br/>\r\n                                    </Typography>\r\n                                    {\"Number of votes for winner: 25000\"} <br/>\r\n                                    {\"Total number of votes: 137000\"}\r\n                                    </React.Fragment>\r\n                                }\r\n                                />\r\n                            </ListItem>\r\n                            \r\n                            <Divider variant=\"inset\" component=\"li\" />\r\n\r\n                            {/* Second election */}\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                {/* Candidate Avatar */}\r\n                                <ListItemAvatar>\r\n                                <Avatar alt=\"Donald Trump\" src=\"/static/images/avatar/1.jpg\" />\r\n                                </ListItemAvatar>\r\n                                {/* Election details */}\r\n                                <ListItemText\r\n                                primary=\"US Presidential Election 2016\"\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        Winner: Donald Trump <br/>\r\n                                    </Typography>\r\n                                    {\"Number of votes for winner: 23471\"} <br/>\r\n                                    {\"Total number of votes: 128632\"}\r\n                                    </React.Fragment>\r\n                                }\r\n                                />\r\n                            </ListItem>\r\n                            \r\n                            <Divider variant=\"inset\" component=\"li\" />\r\n                            \r\n                            {/* Third election */}\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                {/* Candidate Avatar */}\r\n                                <ListItemAvatar>\r\n                                <Avatar alt=\"Barack Obama\" src=\"/static/images/avatar/1.jpg\" />\r\n                                </ListItemAvatar>\r\n                                {/* Election details */}\r\n                                <ListItemText\r\n                                primary=\"US Presidential Election 2012\"\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        Winner: Barack Obama <br/>\r\n                                    </Typography>\r\n                                    {\"Number of votes for winner: 25391\"} <br/>\r\n                                    {\"Total number of votes: 208516\"}\r\n                                    </React.Fragment>\r\n                                }\r\n                                />\r\n                            </ListItem>\r\n\r\n                        </List>\r\n                    </div>\r\n                </body>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\TestAdmin.js",["103","104","105","106"],"import React, { Component, useEffect } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport atob from \"atob\";\r\nimport Layout from \"./Layout\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst TestAdmin = () => {\r\n    const checkIfAuthenticated = () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        let decoded;\r\n        if (!token) {\r\n            swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n            window.location.pathname = \"/login\";\r\n        }\r\n        try {\r\n            decoded = JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (err) {\r\n            console.log(err.message);\r\n            swal(\"Error!\", \"An error has occured!\", \"error\");\r\n            window.location.pathname = \"/login\";\r\n        }\r\n        if (!decoded.isAdmin) {\r\n            swal(\"Error!\", \"Unauthorized!\", \"error\");\r\n            window.location.pathname = \"/login\";\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkIfAuthenticated();\r\n    }, []);\r\n\r\n    // Navigating to the NewCandidate.js component\r\n    const addCandidate = () => {\r\n        window.location.pathname = \"/new_candidate\";\r\n    };\r\n\r\n    // Navigating to the RemoveCandidate.js component\r\n    const removeCandidate = () => {\r\n        window.location.pathname = \"/remove_candidate\";\r\n    };\r\n\r\n    const addUser = () => {\r\n        window.location.pathname = \"/add_user\";\r\n    };\r\n\r\n    /* TODO: This function should start a new election \r\n    by accessing the Blockchain and adding a new election to it*/\r\n    const startElection = () => {\r\n        swal(\"Not implemented yet!!! xD\", {\r\n            icon: \"error\",\r\n        });\r\n    };\r\n\r\n    /* TODO: This function should end an on-going election \r\n    by accessing the Blockchain and removing the running election*/\r\n    const endElection = () => {\r\n        swal(\"Not implemented yet!!! xD\", {\r\n            icon: \"error\",\r\n        });\r\n    };\r\n\r\n    const useStyles = makeStyles(() => ({\r\n            root: {\r\n                width: '100%',\r\n                maxWidth: 360,\r\n                backgroundColor: \"#333\",\r\n            },\r\n        }));\r\n\r\n    const classes = useStyles();\r\n  \r\n    return(\r\n        <Layout>\r\n            <div>\r\n                <head>\r\n                    <link\r\n                    href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\r\n                    rel=\"stylesheet\"\r\n                    id=\"bootstrap-css\"\r\n                    />\r\n                    <link\r\n                    href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n                    rel=\"stylesheet\"\r\n                    />\r\n                    <link\r\n                    href=\"../static/button_styles.css\"\r\n                    rel=\"stylesheet\"\r\n                    />\r\n                </head>\r\n\r\n                <body>\r\n                    <div className={classes.root} style={{margin: \"5% auto\"}} >\r\n                        {/* List of admin control buttons */}\r\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                            {/* Add Candidate Button */}\r\n                            <ListItem button onClick={addCandidate}>\r\n                                <ListItemText primary=\"Add Candidate\" style={{color: \"#ffc312\"}}/>\r\n                            </ListItem>\r\n\r\n                            {/* Remove Candidate Button */}\r\n                            <ListItem button onClick={removeCandidate}>\r\n                                <ListItemText primary=\"Remove Candidate\" style={{color: \"white\"}}/>\r\n                            </ListItem>\r\n\r\n                            {/* Add User Button */}\r\n                            <ListItem button onClick={addUser}>\r\n                                <ListItemText primary=\"Add User\" style={{color: \"#ffc312\"}}/>\r\n                            </ListItem>\r\n\r\n                            {/* End Election Button */}\r\n                            <ListItem button onClick={endElection}>\r\n                                <ListItemText primary=\"End Election\" style={{color: \"white\"}}/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n                </body>\r\n            </div>\r\n        </Layout>\r\n    );\r\n  }\r\n\r\nexport default TestAdmin;\r\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":13},{"ruleId":"111","severity":1,"message":"115","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":16},{"ruleId":"111","severity":1,"message":"116","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":147,"column":60,"nodeType":"119","messageId":"120","endLine":147,"endColumn":66},{"ruleId":"111","severity":1,"message":"121","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"122","line":15,"column":9,"nodeType":"113","messageId":"114","endLine":15,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":35,"column":3,"nodeType":"125","messageId":"120","endLine":38,"endColumn":4},{"ruleId":"126","severity":1,"message":"127","line":159,"column":27,"nodeType":"128","endLine":162,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":4,"column":1,"nodeType":"131","endLine":12,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":4,"column":1,"nodeType":"131","endLine":24,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":12,"column":19,"nodeType":"128","endLine":12,"endColumn":149},{"ruleId":"111","severity":1,"message":"132","line":6,"column":11,"nodeType":"113","messageId":"114","endLine":6,"endColumn":28},{"ruleId":"111","severity":1,"message":"115","line":10,"column":10,"nodeType":"113","messageId":"114","endLine":10,"endColumn":16},{"ruleId":"111","severity":1,"message":"133","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"134","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":20},{"ruleId":"111","severity":1,"message":"135","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":15},{"ruleId":"111","severity":1,"message":"136","line":53,"column":11,"nodeType":"113","messageId":"114","endLine":53,"endColumn":24},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Admin' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Layout' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'Link' is defined but never used.","'decoded' is defined but never used.","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'componentDidMount' is assigned a value but never used.","'Component' is defined but never used.","'ListItemIcon' is defined but never used.","'Divider' is defined but never used.","'startElection' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 0fff4e25c6be6dc622f4fce4b5027ab065651774
