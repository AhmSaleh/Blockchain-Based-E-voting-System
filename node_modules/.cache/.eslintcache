[{"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\index.js":"1","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\App.js":"2","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\reportWebVitals.js":"3","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RemoveCandidate.js":"4","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\ballot.js":"5","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\LoginForm.js":"6","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RegisterForm.js":"7","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Candidates.js":"8","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Admin.js":"9","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\NewCandidate.js":"10","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\AddUser.js":"11","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\web3.js":"12","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Layout.js":"13","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Header.js":"14","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Footer.js":"15","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ConfirmEmail.js":"16"},{"size":517,"mtime":1620124474432,"results":"17","hashOfConfig":"18"},{"size":3914,"mtime":1620137876474,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1620124474433,"results":"20","hashOfConfig":"18"},{"size":5709,"mtime":1620130189701,"results":"21","hashOfConfig":"18"},{"size":2537,"mtime":1620124474427,"results":"22","hashOfConfig":"18"},{"size":4998,"mtime":1620137840801,"results":"23","hashOfConfig":"18"},{"size":4843,"mtime":1620136336966,"results":"24","hashOfConfig":"18"},{"size":7012,"mtime":1620124799755,"results":"25","hashOfConfig":"18"},{"size":3207,"mtime":1620126108310,"results":"26","hashOfConfig":"18"},{"size":4104,"mtime":1620126235785,"results":"27","hashOfConfig":"18"},{"size":5333,"mtime":1620132553384,"results":"28","hashOfConfig":"18"},{"size":527,"mtime":1620124474435,"results":"29","hashOfConfig":"18"},{"size":295,"mtime":1620124474429,"results":"30","hashOfConfig":"18"},{"size":953,"mtime":1620124474429,"results":"31","hashOfConfig":"18"},{"size":716,"mtime":1620124474428,"results":"32","hashOfConfig":"18"},{"size":2709,"mtime":1620136733592,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1hmlgro",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\index.js",[],["72","73"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\App.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\reportWebVitals.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RemoveCandidate.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\ballot.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\LoginForm.js",["74","75"],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\RegisterForm.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Candidates.js",["76"],"import React, { Component } from \"react\";\r\nimport web3 from \"../web3\";\r\nimport ballot from \"../ballot\";\r\nimport swal from \"sweetalert\";\r\nimport \"../static/candidate_styles.css\";\r\nimport axios from \"axios\";\r\n\r\nclass Candidates extends Component {\r\n  state = {\r\n    index: -1,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.token);\r\n    //alert(this.props.candidates);\r\n  }\r\n\r\n  vote = (index, event) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once your vote has been cast, it cannot be changed!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willVote) => {\r\n      if (willVote) {\r\n        this.voteYesCallback(index, event);\r\n        //swal(\"Candidate Index: \" + index);\r\n      } else {\r\n        swal(\"You did not cast a vote.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  voteYesCallback = async (index, event) => {\r\n    event.preventDefault();\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    // TODO: Replace .vote(0) with .vote(index) which gets passed from the onClick with candidate.index that is\r\n    // initially loaded from the database at start\r\n    await ballot.methods\r\n      .vote(index)\r\n      .send({\r\n        from: accounts[0],\r\n        gas: \"100000\",\r\n      })\r\n      .then((hasVoted) => {\r\n        if (hasVoted) {\r\n          swal(\"Your vote was successfully cast!\", {\r\n            icon: \"success\",\r\n          });\r\n        } else {\r\n          swal(\"Error\", \"There was an error when casting your vote!\", {\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      });\r\n\r\n    axios\r\n      .put(\"http://localhost:5000/api/users/voted\", \"\", {\r\n        headers: {\r\n          \"x-auth-token\":\r\n            \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDdiMDI5NjA5MDc5OTczYTA1OGNkZDAiLCJpc0FkbWluIjp0cnVlLCJoYXNWb3RlZCI6ZmFsc2UsImlhdCI6MTYxOTY5OTU1OX0.cKcjFm-rkAwpCB_eXjoM85o_yChY-Ew4fnaaM2MpsGs\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200)\r\n          swal(\"Success!\", \"Your vote has been cast successfully\", \"success\");\r\n        else if (res.status === 404) swal(\"Error!\", \"User not found\", \"error\");\r\n      })\r\n      .catch(() =>\r\n        swal(\"Error!\", \"Failed to vote, please try again later\", \"error\")\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <head>\r\n          <link\r\n            href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            id=\"bootstrap-css\"\r\n          />\r\n          <link\r\n            href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n            rel=\"stylesheet\"\r\n          />\r\n          <link\r\n            rel=\"stylesheet\"\r\n            type=\"text/css\"\r\n            href=\"../static/candidate_styles.css\"\r\n          />\r\n        </head>\r\n\r\n        <body>\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-12 col-sm-8 col-lg-6\">\r\n                {/* Section Heading */}\r\n                <div\r\n                  className=\"section_heading text-center wow fadeInUp\"\r\n                  data-wow-delay=\"0.2s\"\r\n                  style={{\r\n                    visibility: \"visible\",\r\n                    animationDelay: 0.2,\r\n                    animationName: \"fadeInUp\",\r\n                  }}\r\n                >\r\n                  <h3>Candidates</h3>\r\n                  <p>\r\n                    Please cast your vote for one of the available candidates.\r\n                  </p>\r\n                  <div className=\"line\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              {this.props.candidates.length > 0\r\n                ? this.props.candidates.map((candidate, index) => (\r\n                    // Candidate\r\n                    <div className=\"col-12 col-sm-6 col-lg-3\">\r\n                      <div\r\n                        className=\"single_advisor_profile wow fadeInUp\"\r\n                        data-wow-delay=\"0.2s\"\r\n                        style={{\r\n                          visibility: \"visible\",\r\n                          animationDelay: 0.2,\r\n                          animationName: \"fadeInUp\",\r\n                        }}\r\n                        onClick={() => this.vote(index)}\r\n                        key={index}\r\n                        data-index={index}\r\n                      >\r\n                        {/* Candidate Avatar */}\r\n                        <div className=\"advisor_thumb\">\r\n                          <img\r\n                            //src=\"https://bootdey.com/img/Content/avatar/avatar1.png\"\r\n                            src={candidate.photo}\r\n                          />\r\n                        </div>\r\n                        {/* Candidate Details */}\r\n                        <div className=\"single_advisor_details_info\">\r\n                          <h6>{candidate.name}</h6>\r\n                          <p className=\"designation\">{candidate.symbol}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : \"There are currently no candidates\"}\r\n\r\n              {/* Candidate */}\r\n              {/* <div className=\"col-12 col-sm-6 col-lg-3\">\r\n                                <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\" style={{visibility: \"visible\", animationDelay: 0.2, animationName: \"fadeInUp\"}} onClick={this.vote}> */}\r\n              {/* Candidate Avatar */}\r\n              {/* <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/></div> */}\r\n              {/* Candidate Details */}\r\n              {/* <div className=\"single_advisor_details_info\">\r\n                                        <h6>Simon Jackson</h6>\r\n                                        <p className=\"designation\">Candidate symbol</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n\r\n              {/* Candidate */}\r\n              {/* <div className=\"col-12 col-sm-6 col-lg-3\">\r\n                                <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\" style={{visibility: \"visible\", animationDelay: 0.2, animationName: \"fadeInUp\"}} onClick={this.vote}> */}\r\n              {/* Candidate Avatar */}\r\n              {/* <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/></div> */}\r\n              {/* Candidate Details */}\r\n              {/* <div className=\"single_advisor_details_info\">\r\n                                        <h6>Simon Jackson</h6>\r\n                                        <p className=\"designation\">Candidate symbol</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n            </div>\r\n          </div>\r\n        </body>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Candidates;\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Admin.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\NewCandidate.js",["77","78"],"import React from \"react\";\r\nimport { Form, Button, Message, Image } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport web3 from \"../web3\";\r\nimport ballot from \"../ballot\";\r\nimport Layout from \"./Layout\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nclass NewCandidate extends React.Component {\r\n  async componentDidMount() {\r\n    //if (!this.props.token) swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n  }\r\n\r\n  state = {\r\n    candidateName: \"\",\r\n    candidateSymbol: \"\",\r\n    candidatePhoto: \"\",\r\n    errorMessage: \"\",\r\n    loading: false,\r\n    index: -1,\r\n  };\r\n\r\n  onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const storeInBlockchain = async () => {\r\n      this.setState({ errorMessage: \"\", loading: true });\r\n      try {\r\n        const accounts = await web3.eth.getAccounts();\r\n\r\n        await ballot.methods.addCandidate(this.state.candidateName).send({\r\n          from: accounts[0],\r\n          gas: 1000000,\r\n        });\r\n        this.setState({ loading: false });\r\n        swal(\r\n          \"Success!\",\r\n          \"Candidate added to the election successfully!\",\r\n          \"success\"\r\n        );\r\n        window.location.pathname = \"/new_candidate\";\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    };\r\n\r\n    const param = {\r\n      name: this.state.candidateName,\r\n      symbol: this.state.candidateSymbol,\r\n      photo: this.state.candidatePhoto,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/candidates\", param)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({ index: res.index });\r\n          storeInBlockchain();\r\n        } else if (res.status === 401)\r\n          swal(\"Error!\", \"Unauthenticated!\", \"error\");\r\n        else if (res.status === 403) swal(\"Error!\", \"Unauthorized!\", \"error\");\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Error!\", \"Failed to add candidate!\", \"error\");\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  imageHandler = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        this.setState({ candidatePhoto: reader.result });\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  render() {\r\n    const { candidatePhoto } = this.state;\r\n    return (\r\n      <Layout>\r\n        <div class=\"new_candidate_form\">\r\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n            <Form.Field>\r\n              <label>Name</label>\r\n              <input\r\n                placeholder=\"Candidate Name\"\r\n                value={this.state.candidateName}\r\n                onChange={(event) =>\r\n                  this.setState({ candidateName: event.target.value })\r\n                }\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Symbol</label>\r\n              <input\r\n                placeholder=\"Candidate Symbol\"\r\n                value={this.state.candidateSymbol}\r\n                onChange={(event) =>\r\n                  this.setState({ candidateSymbol: event.target.value })\r\n                }\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Photo</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"image-upload\"\r\n                id=\"input\"\r\n                onChange={this.imageHandler}\r\n              />\r\n            </Form.Field>\r\n            <div className=\"img-holder\">\r\n              <Image src={candidatePhoto} alt=\"\" size=\"medium\" rounded />\r\n            </div>\r\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n            <Button\r\n              fluid\r\n              secondary\r\n              style={{ margin: \"0 auto\", display: \"block\", margin: \"10% 0px\" }}\r\n              loading={this.state.loading}\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCandidate;\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\AddUser.js",["79"],"import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nclass AddUser extends Component {\r\n    \r\n    addUser = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Creating a new user\r\n        const param = {\r\n        nationalID: event.target.nationalID.value,\r\n        email: event.target.email.value,\r\n        password: event.target.password.value,\r\n        isRegistered: true,\r\n        isAdmin: event.target.isAdmin.value,\r\n        };\r\n\r\n        /* TODO: Check if request syntax is correct,\r\n        and check how to pass token (it's stored in this.props.token) */\r\n        // Calling our API to add the user\r\n        axios\r\n        .post(\"http://localhost:5000/api/users\", param)\r\n        .then((res) => {\r\n            if (res.status === 200) {\r\n            swal(\"Success!\", \"User added successfully!\", \"success\");\r\n            window.location.pathname = \"/admin\";\r\n            }\r\n        })\r\n        .catch(() => swal(\"Error!\", \"Adding user failed!\", \"error\"));\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n    <div>\r\n      <head>\r\n        <link\r\n          href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\r\n          rel=\"stylesheet\"\r\n          id=\"bootstrap-css\"\r\n        />\r\n        <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n        <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\r\n          integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\r\n          crossorigin=\"anonymous\"\r\n        />\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/styles.css\" />\r\n      </head>\r\n\r\n      <body>\r\n        <div className=\"container\" style={{ margin: \"auto\", width: \"auto\" }}>\r\n          {/* Card Container */}\r\n          <div className=\"d-flex justify-content-center h-100\">\r\n            <div className=\"card\">\r\n              {/* Card Header */}\r\n              <div class=\"card-header\">\r\n                <h3>Add User</h3>\r\n              </div>\r\n\r\n              {/* Card */}\r\n              <div className=\"card-body\">\r\n                {/* Add User Form */}\r\n                <form onSubmit={this.addUser}>\r\n                  {/* National ID Input Group */}\r\n                  <div className=\"input-group form-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"nationalID\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"National ID\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n\r\n                {/* Email Input Group */}\r\n                  <div className=\"input-group form-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n\r\n                  {/* Password Input Group */}\r\n                  <div className=\"input-group form-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">\r\n                        <i className=\"fas fa-key\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n\r\n                  {/* isAdmin Input Group */}\r\n                  <div>\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{width: \"10%\"}}>\r\n                        <i className=\"fas fa-user-cog\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"row align-items-center remember\">\r\n                      <input name=\"isAdmin\" type=\"checkbox\" value=\"true\"></input>\r\n                      <label htmlFor=\"isAdmin\">Is Admin?</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Add User Button */}\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Add\"\r\n                      class=\"btn float-right login_btn\"\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </body>\r\n    </div>\r\n  );\r\n    }\r\n}\r\n\r\nexport default AddUser\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\web3.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Layout.js",["80","81"],"import React from 'react'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport { Container } from 'semantic-ui-react'\r\nexport default (props) =>{\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {props.children}\r\n            <Footer />\r\n        </div>\r\n    )\r\n}","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Header.js",[],"E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\Footer.js",["82","83","84"],"import Footer from 'rc-footer';\r\nimport 'rc-footer/assets/index.css';\r\nimport { render } from 'react-dom';\r\n\r\nexport default (props) =>{\r\n    return (\r\n        <div>\r\n        <Footer\r\n            className=\"footer\"\r\n            columns={[\r\n            {\r\n              icon: (\r\n                <img src=\"https://www.flaticon.com/svg/vstatic/svg/3661/3661733.svg?token=exp=1619391411~hmac=21fcd2d91c800f34ded6dd598fb59a2c\" />\r\n              ),\r\n              title: 'Blockchain',\r\n              url: 'https://yuque.com',\r\n              description: 'AS',\r\n              openExternal: true,\r\n            },\r\n            ]}\r\n            bottom=\"Made with ❤️ by KING SALEH\"\r\n        />,\r\n        </div>\r\n      )\r\n}\r\n","E:\\Dev\\Blockchain-Based-E-voting-System\\src\\components\\ConfirmEmail.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":132,"column":21,"nodeType":"95","endLine":132,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":139,"column":27,"nodeType":"95","endLine":142,"endColumn":29},{"ruleId":"89","severity":1,"message":"98","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":11},{"ruleId":"99","severity":1,"message":"100","line":124,"column":60,"nodeType":"101","messageId":"102","endLine":124,"endColumn":66},{"ruleId":"89","severity":1,"message":"103","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":14},{"ruleId":"89","severity":1,"message":"104","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":5,"column":1,"nodeType":"107","endLine":13,"endColumn":2},{"ruleId":"89","severity":1,"message":"108","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":5,"column":1,"nodeType":"107","endLine":25,"endColumn":2},{"ruleId":"96","severity":1,"message":"97","line":13,"column":17,"nodeType":"95","endLine":13,"endColumn":147},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'jwt' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'Link' is defined but never used.","'Container' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]