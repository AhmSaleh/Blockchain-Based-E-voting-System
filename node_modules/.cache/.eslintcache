[{"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/index.js":"1","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/reportWebVitals.js":"2","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/App.js":"3","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/ballot.js":"4","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Admin.js":"5","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/LoginForm.js":"6","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Candidates.js":"7","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/NewCandidate.js":"8","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/RegisterForm.js":"9","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/TestAdmin.js":"10","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Election.js":"11","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ConfirmNewPassword.js":"12","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ForgotPassword.js":"13","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Homepage.js":"14","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/RemoveCandidate.js":"15","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/AddUser.js":"16","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ConfirmEmail.js":"17","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ConfirmNewPassword2.js":"18","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Signin.jsx":"19","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/RegisterForm2.jsx":"20","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/web3.js":"21","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Layout.js":"22","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Footer2.js":"23","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/WinnerCandidate.js":"24","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/LoserCandidates.js":"25","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Navbar2.0.js":"26","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Header.js":"27","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Footer.js":"28","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ForgotPassword2.js":"29","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/TestAdmin2.js":"30"},{"size":635,"mtime":1625328898678,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1625328898678,"results":"33","hashOfConfig":"32"},{"size":6129,"mtime":1625396620552,"results":"34","hashOfConfig":"32"},{"size":4472,"mtime":1625328898674,"results":"35","hashOfConfig":"32"},{"size":7065,"mtime":1625393038461,"results":"36","hashOfConfig":"32"},{"size":4794,"mtime":1625328898674,"results":"37","hashOfConfig":"32"},{"size":7938,"mtime":1625332002575,"results":"38","hashOfConfig":"32"},{"size":5127,"mtime":1625328898674,"results":"39","hashOfConfig":"32"},{"size":4848,"mtime":1625328898674,"results":"40","hashOfConfig":"32"},{"size":7181,"mtime":1625396147802,"results":"41","hashOfConfig":"32"},{"size":3603,"mtime":1625396717720,"results":"42","hashOfConfig":"32"},{"size":5832,"mtime":1625328898674,"results":"43","hashOfConfig":"32"},{"size":4381,"mtime":1625330471992,"results":"44","hashOfConfig":"32"},{"size":7971,"mtime":1625379177696,"results":"45","hashOfConfig":"32"},{"size":5743,"mtime":1625379177696,"results":"46","hashOfConfig":"32"},{"size":6077,"mtime":1625414291943,"results":"47","hashOfConfig":"32"},{"size":4141,"mtime":1625379177696,"results":"48","hashOfConfig":"32"},{"size":3265,"mtime":1625379177696,"results":"49","hashOfConfig":"32"},{"size":3070,"mtime":1625379177696,"results":"50","hashOfConfig":"32"},{"size":3671,"mtime":1625379177696,"results":"51","hashOfConfig":"32"},{"size":502,"mtime":1625328898678,"results":"52","hashOfConfig":"32"},{"size":375,"mtime":1625334006605,"results":"53","hashOfConfig":"32"},{"size":498,"mtime":1625396721200,"results":"54","hashOfConfig":"32"},{"size":1610,"mtime":1625328898674,"results":"55","hashOfConfig":"32"},{"size":1542,"mtime":1625328898674,"results":"56","hashOfConfig":"32"},{"size":3669,"mtime":1625395449927,"results":"57","hashOfConfig":"32"},{"size":1983,"mtime":1625328898674,"results":"58","hashOfConfig":"32"},{"size":729,"mtime":1625328898674,"results":"59","hashOfConfig":"32"},{"size":2599,"mtime":1625329869684,"results":"60","hashOfConfig":"32"},{"size":9074,"mtime":1625396159382,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"fc1q9u",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/index.js",[],["137","138"],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/reportWebVitals.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/App.js",["139","140","141","142","143"],"import { Component } from \"react\";\nimport \"./App.css\";\nimport ballot from \"./ballot\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport RegisterForm2 from \"./components/RegisterForm2\";\nimport Candidates from \"./components/Candidates\";\nimport Homepage from \"./components/Homepage\";\nimport Admin from \"./components/Admin\";\nimport TestAdmin from \"./components/TestAdmin\";\nimport TestAdmin2 from \"./components/TestAdmin2\";\nimport NewCandidate from \"./components/NewCandidate\";\nimport RemoveCandidate from \"./components/RemoveCandidate\";\nimport AddUser from \"./components/AddUser\";\nimport ConfirmEmail from \"./components/ConfirmEmail\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport ForgotPassword2 from \"./components/ForgotPassword2\";\nimport ConfirmNewPassword from \"./components/ConfirmNewPassword\";\nimport Signin from \"./components/Signin\";\nimport Election from \"./components/Election\";\nimport ConfirmNewPassword2 from \"./components/ConfirmNewPassword2\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\n\nconst axios = require(\"axios\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handler = this.handleTokenChange.bind(this);\n  }\n\n  state = {\n    admin: \"\",\n    message: \"\",\n    candidateIndex: 0,\n    candidates: {},\n    token: \"\",\n    testProp: \"\",\n  };\n\n  async componentDidMount() {\n    const admin = await ballot.methods.admin().call();\n    this.setState({ admin });\n    this.getCandidates();\n  }\n\n  // This function should handle getting all candidates from the Db\n  async getCandidates() {\n    axios\n      .get(\"http://localhost:5000/api/candidates\")\n      .then((res) => {\n        const candidates = res.data;\n        this.setState({ candidates });\n      })\n      .catch((err) => alert(err.message));\n  }\n\n  handleTokenChange = (token) => {\n    this.setState({ token });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n          {/* Home Route*/}\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <>\n                <Redirect to=\"/login\" />\n              </>\n            )}\n          />\n\n          {/* Login Route*/}\n          {/* <Route\n            path=\"/login\"\n            render={() => (\n              <>\n                <LoginForm\n                  tokenHandler={this.handleTokenChange}\n                  token={this.state.token}\n                />\n              </>\n            )}\n          /> */}\n\n          {/* Sigin 2.0 Route*/}\n          <Route\n            path=\"/login\"\n            render={() => (\n              <>\n                <Signin\n                  tokenHandler={this.handleTokenChange}\n                  token={this.state.token}\n                />\n              </>\n            )}\n          />\n\n          {/* Register Route*/}\n          {/* <Route\n            path=\"/register\"\n            render={() => (\n              <>\n                <RegisterForm token={this.state.token} />\n              </>\n            )}\n          /> */}\n\n          {/* Register Route 2*/}\n          <Route\n            path=\"/register\"\n            render={() => (\n              <>\n                <RegisterForm2 token={this.state.token} />\n              </>\n            )}\n          />\n\n          {/* Elections Homepage Route*/}\n          <Route\n            path=\"/elections\"\n            render={() => (\n              <>\n                <Homepage\n                  token={this.state.token}\n                  candidates={this.state.candidates}\n                />\n              </>\n            )}\n          />\n\n          {/* Admin Route*/}\n          <Route\n            path=\"/admin\"\n            render={() => (\n              <>\n                <TestAdmin token={this.state.token} />\n              </>\n            )}\n          />\n\n          {/* Admin 2.0 Route*/}\n          <Route\n            path=\"/admin2\"\n            render={() => (\n              <>\n                <TestAdmin2 token={this.state.token} />\n              </>\n            )}\n          />\n\n          {/* New Candidate Route*/}\n          <Route\n            path=\"/new_candidate\"\n            render={() => (\n              <>\n                <NewCandidate token={this.state.token} />\n              </>\n            )}\n          />\n\n          {/* Remove Candidate Route*/}\n          <Route\n            path=\"/remove_candidate\"\n            render={() => (\n              <>\n                <RemoveCandidate\n                  candidates={this.state.candidates}\n                  token={this.state.token}\n                />\n              </>\n            )}\n          />\n\n          {/* Add User Route*/}\n          <Route\n            path=\"/add_user\"\n            render={() => (\n              <>\n                <AddUser token={this.state.token} />\n              </>\n            )}\n          />\n\n          {/* Candidates Route*/}\n          <Route\n            path=\"/candidates\"\n            render={() => (\n              <>\n                <Candidates\n                  candidates={this.state.candidates}\n                  token={this.state.token}\n                  admin={this.state.admin}\n                />\n              </>\n            )}\n          />\n\n          {/* Forgot Password Route*/}\n          {/* <Route path=\"/forgot_password\" component={ForgotPassword} /> */}\n\n          {/* Forgot Password 2 Route*/}\n          <Route path=\"/forgot_password\" component={ForgotPassword2} />\n\n          {/* Confirm New Password Code Route*/}\n          {/* <Route path=\"/confirm_new_password\" component={ConfirmNewPassword} /> */}\n\n          {/* Confirm New Password Code Route*/}\n          <Route path=\"/confirm_new_password\" component={ConfirmNewPassword2} />\n\n          {/* Confirm Email Code Route*/}\n          <Route path=\"/confirm\" component={ConfirmEmail} />\n\n          {/* Election Route*/}\n          <Route\n            path=\"/election/:id\"\n            render={(routerProps) => (\n              <>\n                <Election id={routerProps.match.params.id} />\n              </>\n            )}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/ballot.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Admin.js",["144","145"],"import React, { Component } from \"react\";\nimport swal from \"sweetalert\";\nimport atob from \"atob\";\nimport Layout from \"./Layout\";\nimport web3 from \"../web3\";\nimport ballot from \"../ballot\";\nimport axios from \"axios\";\n\n\nclass Admin extends Component {\n  checkIfAuthenticated = () => {\n    const token = localStorage.getItem(\"token\");\n    let decoded;\n    if (!token) {\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    try {\n      decoded = JSON.parse(atob(token.split(\".\")[1]));\n    } catch (err) {\n      console.log(err.message);\n      swal(\"Error!\", \"An error has occured!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    if (!decoded.isAdmin) {\n      swal(\"Error!\", \"Unauthorized!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n  };\n  componentDidMount = () => {\n    this.checkIfAuthenticated();\n  };\n\n  // Navigating to the NewCandidate.js component\n  addCandidate = () => {\n    window.location.pathname = \"/new_candidate\";\n  };\n\n  // Navigating to the RemoveCandidate.js component\n  removeCandidate = () => {\n    window.location.pathname = \"/remove_candidate\";\n  };\n\n  addUser = () => {\n    window.location.pathname = \"/add_user\";\n  };\n\n  /* TODO: This function should start a new election \n    by accessing the Blockchain and adding a new election to it*/\n  startElection = () => {\n    swal(\"Not implemented yet!!! xD\", {\n      icon: \"error\",\n    });\n  };\n\n  /* TODO: This function should end an on-going election \n    by accessing the Blockchain and removing the running election*/\n\n  endElection = () => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once you end the election, your action cannot undone!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willEnd) => {\n      if (willEnd) {\n        this.endElectionYesCallback();\n      } else {\n        swal(\"You did not end the election.\");\n      }\n    });\n  }\n\n  endElectionYesCallback = async () => {\n    \n    const candidates = [];\n\n    const accounts = await web3.eth.getAccounts();\n\n    // End Election in Blockchain\n    await ballot.methods.endElection().send({\n      from: accounts[0],\n      gas: 1000000,\n    });\n\n    // Retrive Winner, total votes, and winner votes from Blockchain\n    const winnerIndex = await ballot.methods.winnerIndex().call();\n    const totalVotes = await ballot.methods.totalVotes().call();\n    const winnerVotes = await ballot.methods.winnerVotes().call();\n\n    // Retrieve all other candidates from Database where ID/Index != ID/Index of Winner, then add their votes\n    axios\n      .get(\"http://localhost:5000/api/candidates\")\n      .then((res) => {\n          candidates = res.data;\n      })\n      .catch((err) => alert(err.message));\n\n    const candidateWinner = candidates.find(c => c.index === winnerIndex);\n    candidates = candidates.filter(c => c.index !== winnerIndex);\n\n    // Save election\n    const param = {\n      candidateWinner: candidateWinner,\n      candidateWinnerVotes: winnerVotes,\n      totalVotes: totalVotes,\n      candidates: candidates,\n    };\n\n    axios.post(\"http://localhost:5000/api/elections\", param, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n            if(res.status === 200){\n              swal(\"Success!\", \"Election ended successfully!\", \"success\");\n            }\n        })\n        .catch((err) => swal(\"Error!\", err.message, \"error\"));\n\n    // Delete all candidates\n    axios.delete(\"http://localhost:5000/api/candidates\", {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n            if(res.status === 200){\n              console.log(\"Candidates deleted successfully\");\n            }\n        })\n        .catch((err) => swal(\"Error!\", err.message, \"error\"));\n\n  };\n\n  // Logout functionality\n  logout = () => {\n    swal({\n      title: \"Logging Out\",\n      text: \"Are you sure you want to log out?\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willLogout) => {\n      if (willLogout) {\n        // Removing all cached login values\n        localStorage.removeItem(\"nationalID\");\n        localStorage.removeItem(\"password\");\n        localStorage.removeItem(\"token\");\n\n        // Redirecting to login page\n        window.location.pathname = \"/login\";\n      } else {\n        swal(\"You did not logout.\");\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <head>\n            <link\n              href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n              rel=\"stylesheet\"\n              id=\"bootstrap-css\"\n            />\n            <link\n              href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\n              rel=\"stylesheet\"\n            />\n            <link\n              href=\"../static/button_styles.css\"\n              rel=\"stylesheet\"\n            />\n          </head>\n\n          <body>\n            <div className=\"container\" style={{width: \"20%\", margin: \"auto\", padding: \"50px\"}} >\n              <div className=\"col justify-content-center\">\n              {/* Adding Candidate Button */}\n              <div className=\"col-12 col-sm-6 col-lg-1\">\n                <button\n                  className=\"btn btn-primary btn-lg btn3d\"\n                  onClick={this.addCandidate}\n                >\n                  Add Candidate\n                </button>\n              </div>\n\n              <br/>\n\n              {/* Removing Candidate Button */}\n              <div className=\"col-12 col-sm-6 col-lg-1\">\n                <button\n                  className=\"btn btn-danger btn-lg btn3d\"\n                  onClick={this.removeCandidate}\n                >\n                  Remove Candidate\n                </button>\n              </div>\n            </div>\n\n            <br />\n\n            <div className=\"col justify-content-center\">\n              {/* Adding User Button */}\n              <div className=\"col-12 col-sm-6 col-lg-1\">\n                <button\n                  className=\"btn btn-primary btn-lg btn3d\"\n                  onClick={this.addUser}\n                >\n                  Add User\n                </button>\n              </div>\n\n              <br/>\n              \n              {/* Ending Election Button */}\n              <div className=\"col-12 col-sm-6 col-lg-1\">\n                <button\n                  className=\"btn btn-danger btn-lg btn3d\"\n                  onClick={this.endElection}\n                >\n                  End Election\n                </button>\n              </div>\n\n              {/* Logout Button */}\n              <div className=\"col-12 col-sm-6 col-lg-1\">\n                <button\n                  className=\"btn btn-danger btn-lg btn3d\"\n                  onClick={this.logout}\n                >\n                  Logout\n                </button>\n              </div>\n            </div>\n            </div>\n          </body>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Admin;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/LoginForm.js",["146","147"],"import { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"semantic-ui-react\";\nimport swal from \"sweetalert\";\nimport \"../static/styles.css\";\nimport Layout from \"./Layout\";\nimport \"../static/styles.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nconst atob = require(\"atob\");\n\nconst axios = require(\"axios\");\n\nconst parseJwt = (token) => {\n  try {\n    return JSON.parse(atob(token.split(\".\")[1]));\n  } catch (e) {\n    return null;\n  }\n};\n\nclass LoginForm extends Component {\n  login = (event) => {\n    event.preventDefault();\n\n    const param = {\n      nationalID: event.target.nationalID.value,\n      password: event.target.password.value,\n    };\n\n    axios\n      .post(\"http://localhost:5000/api/auth\", param)\n      .then((res) => {\n        if (res.status === 200) {\n          const token = res.data;\n          localStorage.setItem(\"token\", token);\n          const tokenInfo = parseJwt(token);\n          swal(\"Success!\", \"You've been logged in successfully!\", \"success\");\n          if (tokenInfo.isAdmin) window.location.pathname = \"/admin\";\n          else window.location.pathname = \"/elections\";\n        }\n      })\n      .catch(() => {\n        swal(\"Error!\", \"Failed to log in!\", \"error\");\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <head>\n          <link\n            href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n            rel=\"stylesheet\"\n            id=\"bootstrap-css\"\n          />\n          <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n          <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n          <link\n            rel=\"stylesheet\"\n            href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\n            integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\n            crossorigin=\"anonymous\"\n          />\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/styles.css\" />\n        </head>\n\n        <body >\n          <div className=\"container\" style={{margin: \"10% 20%\"}}>\n            <div className=\"d-flex justify-content-center h-100\">\n              <div className=\"card\">\n                <div class=\"card-header\" style={{backgroundColor: \"#ffc312\"}}>\n                  <h3>Sign In</h3>\n                </div>\n\n                <div className=\"card-body\" style={{backgroundColor: \"#333\"}}>\n                  {/* Login Form */}\n                  <form onSubmit={this.login}>\n                    {/* National ID Input Group */}\n                    <div className=\"input-group form-group\">\n                      <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                          <i className=\"fas fa-user\"></i>\n                        </span>\n                      </div>\n                      <input\n                        type=\"text\"\n                        name=\"nationalID\"\n                        class=\"form-control\"\n                        placeholder=\"National ID\"\n                        required\n                      ></input>\n                    </div>\n\n                    {/* Password Input Group */}\n                    <div className=\"input-group form-group\">\n                      <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                          <i className=\"fas fa-key\"></i>\n                        </span>\n                      </div>\n                      <input\n                        type=\"password\"\n                        name=\"password\"\n                        class=\"form-control\"\n                        placeholder=\"Password\"\n                        required\n                      ></input>\n                    </div>\n\n                    {/* Login Button */}\n                    <div className=\"form-group\">\n                      <input\n                        type=\"submit\"\n                        value=\"Login\"\n                        class=\"btn float-right login_btn\"\n                      />\n                    </div>\n                  </form>\n                </div>\n\n                {/* Card Footer */}\n                <div className=\"card-footer\" style={{backgroundColor: \"#ffc312\"}}>\n                  <div className=\"d-flex justify-content-center links\">\n                    Don't have an account?\n                    <Link to=\"/register\"> Register now!</Link>\n                  </div>\n                  <div class=\"d-flex justify-content-center\">\n                    <Link to=\"/forgot_password\">Forgot your password?</Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </body>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Candidates.js",["148","149"],"import React, { Component } from \"react\";\nimport web3 from \"../web3\";\nimport ballot from \"../ballot\";\nimport swal from \"sweetalert\";\nimport \"../static/candidate_styles.css\";\nimport axios from \"axios\";\nimport atob from \"atob\";\nimport jwt from \"jsonwebtoken\";\nimport \"../static/styles.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Layout from \"./Layout\";\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass Candidates extends Component {\n\n  checkIfAuthenticated = () => {\n        const token = localStorage.getItem(\"token\");\n        let decoded;\n        if (!token) {\n            swal(\"Error!\", \"Unauthenticated!\", \"error\");\n            window.location.pathname = \"/login\";\n        }\n        try {\n            decoded = JSON.parse(atob(token.split(\".\")[1]));\n        } catch (err) {\n            console.log(err.message);\n            swal(\"Error!\", \"An error has occured!\", \"error\");\n            window.location.pathname = \"/login\";\n        }\n        if (decoded.isAdmin) {\n            swal(\"Error!\", \"Unauthorized!\", \"error\");\n            window.location.pathname = \"/admin\";\n        }\n  };\n  \n  componentDidMount() {\n    this.checkIfAuthenticated();\n  }\n\n  state = {\n    index: -1,\n    isLoadingOverlayActive: false,\n  };\n\n  vote = (index, event) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once your vote has been cast, it cannot be changed!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willVote) => {\n      if (willVote) {\n        this.voteYesCallback(index, event);\n        //swal(\"Candidate Index: \" + index);\n      } else {\n        swal(\"You did not cast a vote.\");\n      }\n    });\n  };\n\n  voteYesCallback = async (index, event) => {\n    //event.preventDefault();\n    this.setState({isLoadingOverlayActive: true});\n\n    const accounts = await web3.eth.getAccounts();\n\n    await ballot.methods.vote(0).send({\n      from: accounts[0],\n      gas: 1000000,\n    })\n    .then((hasVoted) => {\n      if (hasVoted) {\n        swal(\"Your vote was successfully cast!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Error\", \"There was an error when casting your vote!\", {\n          icon: \"error\",\n        });\n        this.setState({isLoadingOverlayActive: false});\n        return;\n      }\n    });\n\n    await axios\n      .put(\"http://localhost:5000/api/users/voted\", \"\", {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        if (res.status === 200)\n          swal(\"Success!\", \"Your vote has been cast successfully\", \"success\");\n        else if (res.status === 404) swal(\"Error!\", \"User not found\", \"error\");\n      })\n      .catch(() =>\n        swal(\"Error!\", \"Failed to vote, please try again later\", \"error\")\n      );\n\n      this.setState({isLoadingOverlayActive: false});\n  };\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.state.isLoadingOverlayActive}\n        spinner\n        text='Casting your vote...'\n      >\n        <Layout>\n        <div>\n          <head>\n            <link\n              href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n              rel=\"stylesheet\"\n              id=\"bootstrap-css\"\n            />\n            <link\n              href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\n              rel=\"stylesheet\"\n            />\n            <link\n              rel=\"stylesheet\"\n              type=\"text/css\"\n              href=\"../static/candidate_styles.css\"\n            />\n          </head>\n\n          <body>\n            <div className=\"container\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-12 col-sm-8 col-lg-6\">\n                  {/* Section Heading */}\n                  <div\n                    className=\"section_heading text-center wow fadeInUp\"\n                    data-wow-delay=\"0.2s\"\n                    style={{\n                      visibility: \"visible\",\n                      animationDelay: 0.2,\n                      animationName: \"fadeInUp\",\n                    }}\n                  >\n                    <h3 style={{fontSize: \"40px\"}}>Candidates</h3>\n                    <p style={{fontSize: \"25px\"}} >\n                      Please cast your vote for one of the available candidates.\n                    </p>\n                    <div className=\"line\"></div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                {this.props.candidates.length > 0\n                  ? this.props.candidates.map((candidate, index) => (\n                      // Candidate\n                      <div className=\"col-12 col-sm-6 col-lg-3\">\n                        <div\n                          className=\"single_advisor_profile wow fadeInUp\"\n                          data-wow-delay=\"0.2s\"\n                          style={{\n                            visibility: \"visible\",\n                            animationDelay: 0.2,\n                            animationName: \"fadeInUp\",\n                          }}\n                          onClick={() => this.vote(index)}\n                          key={index}\n                          data-index={index}\n                        >\n                          {/* Candidate Avatar */}\n                          <div className=\"advisor_thumb\">\n                            <img\n                              //src=\"https://bootdey.com/img/Content/avatar/avatar1.png\"\n                              src={candidate.photo}\n                            />\n                          </div>\n                          {/* Candidate Details */}\n                          <div className=\"single_advisor_details_info\">\n                            <h6>{candidate.name}</h6>\n                            <p className=\"designation\">{candidate.symbol}</p>\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                  : \"There are currently no candidates\"}\n\n                {/* Candidate */}\n                {/* <div className=\"col-12 col-sm-6 col-lg-3\">\n                                  <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\" style={{visibility: \"visible\", animationDelay: 0.2, animationName: \"fadeInUp\"}} onClick={this.vote}> */}\n                {/* Candidate Avatar */}\n                {/* <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/></div> */}\n                {/* Candidate Details */}\n                {/* <div className=\"single_advisor_details_info\">\n                                          <h6>Simon Jackson</h6>\n                                          <p className=\"designation\">Candidate symbol</p>\n                                      </div>\n                                  </div>\n                              </div> */}\n\n                {/* Candidate */}\n                {/* <div className=\"col-12 col-sm-6 col-lg-3\">\n                                  <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\" style={{visibility: \"visible\", animationDelay: 0.2, animationName: \"fadeInUp\"}} onClick={this.vote}> */}\n                {/* Candidate Avatar */}\n                {/* <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/></div> */}\n                {/* Candidate Details */}\n                {/* <div className=\"single_advisor_details_info\">\n                                          <h6>Simon Jackson</h6>\n                                          <p className=\"designation\">Candidate symbol</p>\n                                      </div>\n                                  </div>\n                              </div> */}\n              </div>\n            </div>\n          </body>\n        </div>\n        </Layout>\n      </LoadingOverlay>\n    );\n  }\n}\n\nexport default Candidates;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/NewCandidate.js",["150"],"import React from \"react\";\nimport { Form, Button, Message, Image } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport web3 from \"../web3\";\nimport ballot from \"../ballot\";\nimport Layout from \"./Layout\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport atob from \"atob\";\n\nclass NewCandidate extends React.Component {\n  checkIfAuthenticated() {\n    const token = localStorage.getItem(\"token\");\n    let decoded;\n    if (!token) {\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    try {\n      decoded = JSON.parse(atob(token.split(\".\")[1]));\n    } catch (err) {\n      console.log(err.message);\n      swal(\"Error!\", \"An error has occured!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    if (!decoded.isAdmin) {\n      swal(\"Error!\", \"Unauthorized!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n  }\n  componentDidMount() {\n    this.checkIfAuthenticated();\n  }\n\n  state = {\n    candidateName: \"\",\n    candidateSymbol: \"\",\n    candidateDescription: \"\",\n    candidatePhoto: \"\",\n    errorMessage: \"\",\n    loading: false,\n    index: -1,\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    const storeInBlockchain = async () => {\n      this.setState({ errorMessage: \"\", loading: true });\n      try {\n        const accounts = await web3.eth.getAccounts();\n\n        await ballot.methods.addCandidate(this.state.candidateName).send({\n          from: accounts[0],\n          gas: 1000000,\n        });\n        this.setState({ loading: false });\n        swal(\n          \"Success!\",\n          \"Candidate added to the election successfully!\",\n          \"success\"\n        );\n        window.location.pathname = \"/new_candidate\";\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n\n    const param = {\n      name: this.state.candidateName,\n      symbol: this.state.candidateSymbol,\n      photo: this.state.candidatePhoto,\n      description: this.state.candidateDescription\n    };\n\n    axios\n      .post(\"http://localhost:5000/api/candidates\", param, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          this.setState({ index: res.index });\n          storeInBlockchain();\n        } else if (res.status === 401)\n          swal(\"Error!\", \"Unauthenticated!\", \"error\");\n        else if (res.status === 403) swal(\"Error!\", \"Unauthorized!\", \"error\");\n      })\n      .catch((err) => {\n        swal(\"Error!\", \"Failed to add candidate!\", \"error\");\n        console.log(err.message);\n      });\n  };\n\n  imageHandler = (e) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        this.setState({ candidatePhoto: reader.result });\n      }\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  render() {\n    const { candidatePhoto } = this.state;\n    return (\n      <Layout>\n        <div class=\"new_candidate_form\">\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n            <Form.Field>\n              <label>Name</label>\n              <input\n                placeholder=\"Candidate Name\"\n                value={this.state.candidateName}\n                onChange={(event) =>\n                  this.setState({ candidateName: event.target.value })\n                }\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Symbol</label>\n              <input\n                placeholder=\"Candidate Symbol\"\n                value={this.state.candidateSymbol}\n                onChange={(event) =>\n                  this.setState({ candidateSymbol: event.target.value })\n                }\n              />\n            </Form.Field>\n\n            {/*Candidate Desc*/}\n            <Form.Field>\n              <label>Description</label>\n              <input\n                type=\"textarea\"\n                placeholder=\"Candidate Description\"\n                value={this.state.candidateDescription}\n                onChange={(event) =>\n                  this.setState({ candidateDescription: event.target.value })\n                }\n              />\n            </Form.Field>\n\n\n            {/*Candidate Photo*/}\n            <Form.Field>\n              <label>Photo</label>\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                name=\"image-upload\"\n                id=\"input\"\n                onChange={this.imageHandler}\n              />\n            </Form.Field>\n            <div className=\"img-holder\">\n              <Image src={candidatePhoto} alt=\"\" size=\"medium\" rounded />\n            </div>\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n            <Button\n              fluid\n              secondary\n              style={{ margin: \"0 auto\", display: \"block\", margin: \"10% 0px\" }}\n              loading={this.state.loading}\n              type=\"submit\"\n            >\n              Add\n            </Button>\n          </Form>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default NewCandidate;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/RegisterForm.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/TestAdmin.js",["151","152","153","154","155"],"import React, { Component, useEffect, useState } from \"react\";\nimport swal from \"sweetalert\";\nimport atob from \"atob\";\nimport Layout from \"./Layout\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport web3 from \"../web3\";\nimport ballot from \"../ballot\";\nimport axios from \"axios\";\n\nconst TestAdmin = () => {\n    const checkIfAuthenticated = () => {\n        const token = localStorage.getItem(\"token\");\n        let decoded;\n        if (!token) {\n            swal(\"Error!\", \"Unauthenticated!\", \"error\");\n            window.location.pathname = \"/login\";\n        }\n        try {\n            decoded = JSON.parse(atob(token.split(\".\")[1]));\n        } catch (err) {\n            console.log(err.message);\n            swal(\"Error!\", \"An error has occured!\", \"error\");\n            window.location.pathname = \"/login\";\n        }\n        if (!decoded.isAdmin) {\n            swal(\"Error!\", \"Unauthorized!\", \"error\");\n            window.location.pathname = \"/login\";\n        }\n    };\n\n    useEffect(() => {\n        // checkIfAuthenticated();\n    }, []);\n\n    // Navigating to the NewCandidate.js component\n    const addCandidate = () => {\n        window.location.pathname = \"/new_candidate\";\n    };\n\n    // Navigating to the RemoveCandidate.js component\n    const removeCandidate = () => {\n        window.location.pathname = \"/remove_candidate\";\n    };\n\n    const addUser = () => {\n        window.location.pathname = \"/add_user\";\n    };\n\n    const endElection = () => {\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once you end the election, your action cannot undone!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        }).then((willEnd) => {\n        if (willEnd) {\n            endElectionYesCallback();\n        } else {\n            swal(\"You did not end the election.\");\n        }\n        });\n    }\n\n  const endElectionYesCallback = async () => {\n    \n    var candidates = [];\n    var candidateWinner = {};\n\n    const accounts = await web3.eth.getAccounts();\n\n    const totalVotes = await ballot.methods.totalVotes().call();\n\n    // End Election in Blockchain\n    await ballot.methods.endElection().send({\n      from: accounts[0],\n      gas: 1000000,\n    });\n\n    // Retrive Winner, total votes, and winner votes from Blockchain\n    const winnerIndex = await ballot.methods.winnerIndex().call();\n    const winnerVotes = await ballot.methods.winnerVotes().call();\n\n    // Retrieve all other candidates from Database where ID/Index != ID/Index of Winner, then add their votes\n    candidates = await axios\n                        .get(`http://localhost:5000/api/candidates/getall/${winnerIndex}`)\n                        .then((res) => {\n                            return res.data;\n                        })\n                        .catch((err) => {\n                            alert(\"GETTING CANDIDATES \" + err.message);\n                            return [-1];\n                        });\n\n    if(candidates[0] === -1) return;\n\n    // Retrieve the winner candidate\n    candidateWinner = await axios\n                            .get(`http://localhost:5000/api/candidates/${winnerIndex}`)\n                            .then((res) => {\n                                return res.data;          \n                            })\n                            .catch((err) => {\n                                alert(\"GETTING WINNER CANDIDATE \" + err.message);\n                                return [-1];\n                            });\n    \n    if(candidateWinner[0] === -1) return;\n\n    // Save election\n    const param = {\n      candidateWinner: candidateWinner,\n      candidateWinnerVotes: winnerVotes,\n      totalVotes: totalVotes,\n      candidates: candidates,\n    };\n\n    axios.post(\"http://localhost:5000/api/elections\", param, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n            if(res.status === 200){\n              swal(\"Success!\", \"Election ended successfully!\", \"success\");\n            }\n        })\n        .catch((err) => {\n            swal(\"Error! SAVING ELECTION\", err.message, \"error\");\n            return;\n        });\n\n    // Delete all candidates\n    axios.delete(\"http://localhost:5000/api/candidates\", {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n            if(res.status === 200){\n              console.log(\"Candidates deleted successfully\");\n            }\n        })\n        .catch((err) => swal(\"Error! DELETING CANDIDATES\", err.message, \"error\"));\n\n  };\n\n    const useStyles = makeStyles(() => ({\n            root: {\n                width: '100%',\n                maxWidth: 360,\n                backgroundColor: \"#333\",\n            },\n        }));\n\n    const classes = useStyles();\n  \n    return(\n        <Layout>\n            <div>\n                <head>\n                    <link\n                    href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n                    rel=\"stylesheet\"\n                    id=\"bootstrap-css\"\n                    />\n                    <link\n                    href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\n                    rel=\"stylesheet\"\n                    />\n                    <link\n                    href=\"../static/button_styles.css\"\n                    rel=\"stylesheet\"\n                    />\n                </head>\n\n                <body>\n                    <div className={classes.root} style={{margin: \"5% auto\"}} >\n                        {/* List of admin control buttons */}\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\n                            {/* Add Candidate Button */}\n                            <ListItem button onClick={addCandidate}>\n                                <ListItemText primary=\"Add Candidate\" style={{color: \"#ffc312\"}}/>\n                            </ListItem>\n\n                            {/* Remove Candidate Button */}\n                            <ListItem button onClick={removeCandidate}>\n                                <ListItemText primary=\"Remove Candidate\" style={{color: \"white\"}}/>\n                            </ListItem>\n\n                            {/* Add User Button */}\n                            <ListItem button onClick={addUser}>\n                                <ListItemText primary=\"Add User\" style={{color: \"#ffc312\"}}/>\n                            </ListItem>\n\n                            {/* End Election Button */}\n                            <ListItem button onClick={endElection}>\n                                <ListItemText primary=\"End Election\" style={{color: \"white\"}}/>\n                            </ListItem>\n                        </List>\n                    </div>\n                </body>\n            </div>\n        </Layout>\n    );\n  }\n\nexport default TestAdmin;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Election.js",["156","157"],"import React, { Component } from 'react';\nimport Navbar from './Navbar2.0';\nimport Footer from './Footer2';\nimport WinnerCandidate from './WinnerCandidate';\nimport LoserCandidates from './LoserCandidates';\nimport axios from \"axios\";\nimport Layout from './Layout'\nclass Election extends Component {\n    constructor(props) {\n    super(props);\n    }\n    \n    state = {\n        id: this.props.id,\n        election: {\n            candidateWinner: {\n            name: \"Joe Biden\",\n            votesCount: 150000,\n            totalVotes: 350000,\n            winnerDescition: \"Joe Biden, byname of Joseph Robinette Biden, Jr., (born November 20, 1942, Scranton, Pennsylvania, U.S.), 46th president of the United States (2021– ) and 47th vice president of the United States (2009–17) in the Democratic administration of Pres. Barack Obama. He previously represented Delaware in the U.S. Senate (1973–2009).\"\n            },\n            candidates: [\n            {\n                candidateName: \"Trump\",\n                votesCount: 35000,\n                img: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Donald_Trump_official_portrait_%28cropped%29.jpg\",\n            },\n            {\n                candidateName: \"Hillary Clinton\",\n                votesCount: 13000,\n                img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Hillary_Clinton_by_Gage_Skidmore_4_%28cropped%29.jpg/449px-Hillary_Clinton_by_Gage_Skidmore_4_%28cropped%29.jpg\",\n            },\n            {\n                candidateName: \"Jorgensen Portrait\",\n                votesCount: 5800,\n                img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Jo_Jorgensen_portrait_3.jpg/220px-Jo_Jorgensen_portrait_3.jpg\",\n            },\n            {\n                candidateName: \"Trump\",\n                votesCount: 35000,\n                img: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Donald_Trump_official_portrait_%28cropped%29.jpg\",\n            },\n            {\n                candidateName: \"Hillary Clinton\",\n                votesCount: 13000,\n                img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Hillary_Clinton_by_Gage_Skidmore_4_%28cropped%29.jpg/449px-Hillary_Clinton_by_Gage_Skidmore_4_%28cropped%29.jpg\",\n            },\n            {\n                candidateName: \"Jorgensen Portrait\",\n                votesCount: 5800,\n                img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Jo_Jorgensen_portrait_3.jpg/220px-Jo_Jorgensen_portrait_3.jpg\",\n            },\n    ],\n        }\n    }\n\n    componentDidMount = () => {\n        this.getElectionDetails();\n    }\n\n    getElectionDetails = () => {\n        console.log(this.state.id);\n        axios\n        .get(`http://localhost:5000/api/elections/${this.state.id}`, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n        .then((res) => {\n            const election = res.data;\n            this.setState({ election });\n        })\n        .catch((err) => alert(err.message));\n    }\n\n    render() { \n        return (\n            <React.Fragment>\n                <Navbar/>\n                <WinnerCandidate winner={this.state.election.candidateWinner}\n                                totalVotes={this.state.election.totalVotes}\n                                winnerVotes={this.state.election.candidateWinnerVotes}/>\n                                \n                <LoserCandidates candidates={this.state.election.candidates} />\n                <Footer/>\n            </React.Fragment>\n          );\n    }\n}\n \nexport default Election;","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ConfirmNewPassword.js",["158"],"import React from 'react';\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\n\nconst ConfirmNewPassword = () => {\n    const componentDidMount = () => {\n    alert(\"Please check your email for a confirmation code.\");\n  }\n\n  // When the user enters the confirmation code then clicks confirm\n  const confirm = (event) => {\n    event.preventDefault();\n\n    // Getting the new user password\n    const newPassword = event.target.newPassword.value;\n    const newPasswordConfirmation = event.target.newPasswordConfirmation.value;\n\n    // Checking if the password and its confirmation match\n    if(newPassword !== newPasswordConfirmation){\n        swal(\"Error!\", \"Please make sure you re-enter your password correctly!\", \"error\");\n        return;\n    }\n\n    //Retrieve the National ID from the ForgotPassword component, and add the password\n    const param = {\n      nationalID: localStorage.getItem(\"nationalID\"),\n      password: newPassword,\n    };\n\n    // Check the confirmation code then change the user's password if the code is correct\n    if (event.target.confirmationCode.value === localStorage.getItem(\"code\")) {\n      axios\n        .put(\"http://localhost:5000/api/users/forgotpassword\", param)\n        .then((res) => {\n          if (res.status === 200) {\n            swal(\"Success!\", \"Password Changed Successfully\", \"success\");\n            localStorage.removeItem(\"code\");\n            window.location.pathname = \"/login\";\n          }\n        })\n        .catch((error) => swal(\"Error!\", error.message, \"error\"));\n    } else {\n      swal(\"Error!\", \"Invalid Code\", \"error\");\n    }\n  };\n\n    return (\n        <div>\n            <head>\n                <link\n                    href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n                    rel=\"stylesheet\"\n                    id=\"bootstrap-css\"\n                />\n                <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n                <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n                <link\n                    rel=\"stylesheet\"\n                    href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\n                    integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\n                    crossorigin=\"anonymous\"\n                />\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/styles.css\" />\n            </head>\n\n            <body>\n            <div className=\"container\" style={{ margin: \"auto\", width: \"auto\" }}>\n                {/* Card Container */}\n                <div className=\"d-flex justify-content-center h-100\">\n                <div className=\"card\">\n                    {/* Card Header */}\n                    <div class=\"card-header\">\n                    <h3>New Password Confirmation</h3>\n                    </div>\n\n                    {/* Card */}\n                    <div className=\"card-body\">\n                    {/* Confirmation Form */}\n                    <form onSubmit={confirm}>\n                        {/* New Password Input Group */}\n                        <div className=\"input-group form-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                            <i class=\"fas fa-shield-alt\"></i>\n                            </span>\n                        </div>\n                        <input\n                            type=\"password\"\n                            name=\"newPassword\"\n                            class=\"form-control\"\n                            placeholder=\"Please enter your new password...\"\n                            required\n                        ></input>\n                        </div>\n\n\n                        {/* New Password Confirmation Input Group */}\n                        <div className=\"input-group form-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                            <i class=\"fas fa-shield-alt\"></i>\n                            </span>\n                        </div>\n                        <input\n                            type=\"password\"\n                            name=\"newPasswordConfirmation\"\n                            class=\"form-control\"\n                            placeholder=\"Please re-enter your new password...\"\n                            required\n                        ></input>\n                        </div>\n                        \n                        {/* Confirmation Code Input Group */}\n                        <div className=\"input-group form-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                            <i class=\"fas fa-shield-alt\"></i>\n                            </span>\n                        </div>\n                        <input\n                            type=\"text\"\n                            name=\"confirmationCode\"\n                            class=\"form-control\"\n                            placeholder=\"Please enter your confirmation code...\"\n                            required\n                        ></input>\n                        </div>\n\n                        {/* Submit Button */}\n                        <div className=\"form-group\">\n                        <input\n                            type=\"submit\"\n                            value=\"Submit\"\n                            class=\"btn float-right login_btn\"\n                        />\n                        </div>\n                    </form>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </body>\n      </div>\n    )\n}\n\nexport default ConfirmNewPassword\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ForgotPassword.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Homepage.js",["159"],"import React, { Component } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Layout from './Layout';\nimport axios from \"axios\";\nimport ballot from \"../ballot\";\n\n\nclass Homepage extends Component {\n    state = {\n        ongoingElection: {\n            userHasVoted: false,\n            totalVotes: 0,\n        },\n        elections: []\n    }\n    \n    componentDidMount = async () => {\n        await this.getElections();\n        await this.getOngoingElection();\n    }\n\n    getOngoingElection = async () => {\n        const totalVotes = await ballot.methods.totalVotes().call();\n        const nationalID = localStorage.getItem(\"nationalID\");\n\n        const user = await axios\n                            .get(`http://localhost:5000/api/users/user/${nationalID}`)\n                            .then((res) => {return res.data});\n\n        const ongoingElectionInfo = {\n            userHasVoted: user.hasVoted,\n            totalVotes: totalVotes,\n        }\n\n        this.setState({ongoingElection: ongoingElectionInfo});\n    }\n\n    getElections = async () => {\n        axios\n        .get(\"http://localhost:5000/api/elections\", {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n        .then((res) => {\n            const elections = res.data;\n            this.setState({ elections });\n        })\n        .catch((err) => alert(err.message));\n    }\n\n    goToElection = (id) => {\n        window.location.pathname = `/election/${id}`\n    }\n\n    goToOngoingElection = () => {\n        window.location.pathname = \"/candidates\";\n    }\n\n    classes = {\n        root: {\n            width: '100%',\n            maxWidth: '36ch',\n            backgroundColor: \"white\",\n        },\n        inline: {\n            display: 'inline',\n        },\n    };\n\n    render() {\n        return (\n            <Layout>\n                <div>\n                    <head>\n                        <link\n                            href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n                            rel=\"stylesheet\"\n                            id=\"bootstrap-css\"\n                        />\n                        <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n                        <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n                        <link\n                            rel=\"stylesheet\"\n                            href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\n                            integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\"\n                            crossorigin=\"anonymous\"\n                        />\n                    </head>\n\n                    <body>\n                        {/* Ongoing Election Container*/}\n                        <div style={{margin: \"auto\", marginTop: \"50px\", marginBottom: \"25px\", width: \"25%\"}}>\n                            <h2>Ongoing Election</h2>\n\n                            {this.props.candidates.length > 0 ? (<List className={this.classes.root}>\n                                {/* Ongoing election */}\n                                <ListItem alignItems=\"flex-start\" onClick={this.goToOngoingElection}>\n                                    {/* Question Mark indicating no one has won yet? */}\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"?\" src=\"\"/>\n                                    </ListItemAvatar>\n\n                                    {/* Election details */}\n                                    <ListItemText\n                                    primary={\"Election \" + (this.state.elections.length + 1)}\n                                    secondary={\n                                        <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={this.classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                            {this.state.ongoingElection.userHasVoted ?  \"You have already voted.\" : \"You have not cast your vote yet!\"} <br/>\n                                        </Typography>\n                                        {\"Current status: ongoing\"} <br/>\n                                        {\"Total number of votes so far: \" + this.state.ongoingElection.totalVotes}\n                                        </React.Fragment>\n                                    }\n                                    />\n                                </ListItem>\n                            </List>) : \"There is currently no ongoing election.\"}\n                        </div>\n\n                        <Divider variant=\"inset\"/> <br/>\n\n                        {/* Previous Elections Container*/}\n                        <div style={{margin: \"0 auto\", width: \"25%\"}}>\n                            <h2> Previous Elections </h2>\n\n                            {/* TODO: Map elections from DB to this list, and add their indexes just like in the Candidates components */}\n\n                            {/* List of previous elections */}\n                            <List className={this.classes.root}>\n\n                                {this.state.elections.length > 0\n                                ? this.state.elections.map((election, index) => (\n                                    \n                                    // Brief details for each election\n                                    <ListItem alignItems=\"flex-start\" onClick={() => this.goToElection(election._id)}>\n                                        {/* Election winner's avatar */}\n                                        <ListItemAvatar>\n                                            <Avatar alt=\"?\" src=\"\"/>\n                                        </ListItemAvatar>\n\n                                        {/* Election details */}\n                                        <ListItemText\n                                        primary={\"Election \" + (index+1)}\n                                        secondary={\n                                            <React.Fragment>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"body2\"\n                                                className={this.classes.inline}\n                                                color=\"textPrimary\"\n                                            >\n                                                Winner: {election.candidateWinner.name} <br/>\n                                            </Typography>\n                                            {\"Number of votes for winner: \" + election.candidateWinnerVotes} <br/>\n                                            {\"Total number of votes: \" + election.totalVotes} \n                                            </React.Fragment>\n                                        }\n                                        />\n                                </ListItem>\n                                \n                                ))\n                                : <h4>There have been no previous elections</h4>}\n\n                            </List>\n                        </div>\n                    </body>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default Homepage\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/RemoveCandidate.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/AddUser.js",["160"],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ConfirmEmail.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ConfirmNewPassword2.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Signin.jsx",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/RegisterForm2.jsx",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/web3.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Layout.js",["161","162","163"],"import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Footer2 from './Footer2';\nimport Navbar2 from './Navbar2.0';\n\nexport default (props) =>{\n    return (\n        <div>\n            <Navbar2/>\n            {/* <Header /> */}\n                {props.children}\n            {/* <Footer /> */}\n            <Footer2/>\n        </div>\n    )\n}","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Footer2.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/WinnerCandidate.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/LoserCandidates.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Navbar2.0.js",["164","165","166","167","168"],"import React, { Component } from \"react\";\nimport logo from \"../imgs/logo.png\"\nimport logoutIcon from '../imgs/logout.png'\nimport swal from \"sweetalert\";\n\nclass Navbar extends Component {\n    state = {\n      isAdmin: false\n    };\n\n    componentDidMount = () => {\n      this.checkIfAdmin();\n    }\n\n    checkIfAdmin = () => {\n        const token = localStorage.getItem(\"token\");\n        let decoded;\n        if (!token)\n          return;\n        try {\n            decoded = JSON.parse(atob(token.split(\".\")[1]));\n        } catch (err) {\n            console.log(err.message);\n        }\n        if (decoded.isAdmin) {\n            this.setState({isAdmin: true});\n        }\n    };\n\n    // Logout functionality\n    logout = async () => {\n      swal({\n      title: \"Logging Out\",\n      text: \"Are you sure you want to log out?\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n      }).then((willLogout) => {\n      if (willLogout) {\n          // Removing all cached login values\n          localStorage.removeItem(\"nationalID\");\n          localStorage.removeItem(\"password\");\n          localStorage.removeItem(\"token\");\n\n          // Redirecting to login page\n          window.location.pathname = \"/login\";\n      } else {\n          swal(\"You did not logout.\");\n      }\n      });\n  }\n\n  goToElections = () => {\n    window.location.pathname = \"/elections\";\n  }\n\n  goToAdminPanel = () => {\n    window.location.pathname = \"/admin\";\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <nav\n          style={{ backgroundColor: \"#ececec\"}}\n          className=\"navbar navbar-expand-lg navbar-light\"\n        >\n          <div class=\"container px-4 px-lg-5\">\n            <a class=\"navbar-brand\" href=\"#!\">\n              DEVS\n            </a>\n            <img src={logo} height=\"35px\" width=\"35px\" />\n            <button\n              class=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul class=\"navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link active ml-5\" aria-current=\"page\" style={{cursor: \"pointer\", fontWeight: \"420\"}} onClick={this.goToElections}>\n                    Home\n                  </a>\n                </li>\n\n                {this.state.isAdmin ? (\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active ml-2\" aria-current=\"page\" style={{cursor: \"pointer\"}} onClick={this.goToAdminPanel}>\n                      Control Panel\n                    </a>\n                  </li>\n                ) : \"\"}\n                \n\n              </ul>\n              <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item\">\n                  <label href=\"#\" class=\"nav-link \">\n                  <img src={logoutIcon} height=\"25px\" width=\"25px\" onClick={this.logout}/></label>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link active mt-1\" aria-current=\"page\" style={{cursor: \"pointer\"}} onClick={this.logout}>\n                    Logout\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Navbar;\n\n// /home/saleh/Desktop/Demo_ch1/my-first-app/src/components/Navbar.jsx\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Header.js",[],"/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/Footer.js",["169","170"],"import Footer from 'rc-footer';\nimport 'rc-footer/assets/index.css';\n\nexport default () =>{\n    return (\n        <div style={{position: \"fixed\", bottom: 0, width: \"0%\"}}>\n          <Footer\n              className=\"footer\"\n              columns={[\n              {\n                icon: (\n                  <img src=\"https://www.flaticon.com/svg/vstatic/svg/3661/3661733.svg?token=exp=1619391411~hmac=21fcd2d91c800f34ded6dd598fb59a2c\" />\n                ),\n                title: 'Blockchain E-Voting System',\n                url: 'https://yuque.com',\n                description: 'AS',\n                openExternal: true,\n              },\n              ]}\n              bottom=\"© 2020-2021\"\n          />\n        </div>\n      )\n}\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/ForgotPassword2.js",["171","172"],"import React, { Component } from \"react\";\nimport logo from \"../imgs/logo.png\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\n\nconst ForgotPassword2 = () => {\n\n    const submit = (event) => {\n        event.preventDefault();\n\n        const email = event.target.email.value;\n        localStorage.setItem(\"nationalID\", event.target.nationalID.value);\n\n        sendMail(email);\n    };\n\n\n    const sendMail = (email) => {\n        localStorage.setItem(\"code\", Math.floor(Math.random() * 10000000000 + 1));\n        const param = {\n        email: email,\n        subject: \"E-Voting System Password Recovery\",\n        text: \"This is your code\",\n        html: `<p>Your password recovery code is <strong>${localStorage.getItem(\n            \"code\"\n        )}</strong></p>`,\n        };\n\n        //Send an Email to the user with the password recovery code\n        axios\n        .post(\"http://localhost:5000/api/users/email\", param)\n        .then((res) => {\n            if (res.status === 200) {\n            window.location.pathname = \"/confirm_new_password\";\n            }\n        })\n        .catch(() => {\n            swal(\"Error!\", \"The email you entered might not be registered!\", \"error\");\n            localStorage.removeItem(\"nationalID\");\n        });\n    };\n\n  \n    return (\n      <React.Fragment>\n        <head>\n        <link rel=\"stylesheet\" href=\"../styles.css\" />\n        </head>\n        <body\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n          className=\"text-center\"\n        >\n          <form onSubmit={submit} style = {{marginTop:\"200px\"}}class=\"form-signin\">\n            <img class=\"mb-4\" src={logo} alt=\"\" width=\"72\" height=\"72\" />\n            <h1 class=\"h3 mb-3 font-weight-normal\">Reset Password</h1>\n            <input\n              type=\"email\"\n              name=\"email\"\n              class=\"form-control\"\n              placeholder=\"Email\"\n              required\n              autofocus\n            />\n            <input\n              name=\"nationalID\"\n              type=\"number\"\n              class=\"form-control\"\n              placeholder=\"National ID\"\n              required\n            />\n            <input\n                type=\"submit\"\n                value=\"Confirm\"\n                class=\"btn btn-lg btn-secondary btn-block mt-3\"\n            />\n            <p class=\"mt-5 mb-3 text-muted\">&copy; 2020-2021</p>\n          </form>\n        </body>\n      </React.Fragment>\n    );\n}\n\nexport default ForgotPassword2;\n","/home/saleh/Desktop/Blockchain-Based-E-voting-System/src/components/TestAdmin2.js",["173","174","175","176","177","178","179","180","181","182","183","184"],"import React, { Component, useEffect, useState } from \"react\";\nimport swal from \"sweetalert\";\nimport atob from \"atob\";\nimport Layout from \"./Layout\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport web3 from \"../web3\";\nimport ballot from \"../ballot\";\nimport axios from \"axios\";\n\nconst TestAdmin = () => {\n  const checkIfAuthenticated = () => {\n    const token = localStorage.getItem(\"token\");\n    let decoded;\n    if (!token) {\n      swal(\"Error!\", \"Unauthenticated!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    try {\n      decoded = JSON.parse(atob(token.split(\".\")[1]));\n    } catch (err) {\n      console.log(err.message);\n      swal(\"Error!\", \"An error has occured!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n    if (!decoded.isAdmin) {\n      swal(\"Error!\", \"Unauthorized!\", \"error\");\n      window.location.pathname = \"/login\";\n    }\n  };\n\n  useEffect(() => {\n    // checkIfAuthenticated();\n  }, []);\n\n  // Navigating to the NewCandidate.js component\n  const addCandidate = () => {\n    window.location.pathname = \"/new_candidate\";\n  };\n\n  // Navigating to the RemoveCandidate.js component\n  const removeCandidate = () => {\n    window.location.pathname = \"/remove_candidate\";\n  };\n\n  const addUser = () => {\n    window.location.pathname = \"/add_user\";\n  };\n\n  const endElection = () => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once you end the election, your action cannot undone!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willEnd) => {\n      if (willEnd) {\n        endElectionYesCallback();\n      } else {\n        swal(\"You did not end the election.\");\n      }\n    });\n  };\n\n  const endElectionYesCallback = async () => {\n    var candidates = [];\n    var candidateWinner = {};\n\n    const accounts = await web3.eth.getAccounts();\n\n    const totalVotes = await ballot.methods.totalVotes().call();\n\n    // End Election in Blockchain\n    await ballot.methods.endElection().send({\n      from: accounts[0],\n      gas: 1000000,\n    });\n\n    // Retrive Winner, total votes, and winner votes from Blockchain\n    const winnerIndex = await ballot.methods.winnerIndex().call();\n    const winnerVotes = await ballot.methods.winnerVotes().call();\n\n    // Retrieve all other candidates from Database where ID/Index != ID/Index of Winner, then add their votes\n    candidates = await axios\n      .get(`http://localhost:5000/api/candidates/getall/${winnerIndex}`)\n      .then((res) => {\n        return res.data;\n      })\n      .catch((err) => {\n        alert(\"GETTING CANDIDATES \" + err.message);\n        return [-1];\n      });\n\n    if (candidates[0] === -1) return;\n\n    // Retrieve the winner candidate\n    candidateWinner = await axios\n      .get(`http://localhost:5000/api/candidates/${winnerIndex}`)\n      .then((res) => {\n        return res.data;\n      })\n      .catch((err) => {\n        alert(\"GETTING WINNER CANDIDATE \" + err.message);\n        return [-1];\n      });\n\n    if (candidateWinner[0] === -1) return;\n\n    // Save election\n    const param = {\n      candidateWinner: candidateWinner,\n      candidateWinnerVotes: winnerVotes,\n      totalVotes: totalVotes,\n      candidates: candidates,\n    };\n\n    axios\n      .post(\"http://localhost:5000/api/elections\", param, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          swal(\"Success!\", \"Election ended successfully!\", \"success\");\n        }\n      })\n      .catch((err) => {\n        swal(\"Error! SAVING ELECTION\", err.message, \"error\");\n        return;\n      });\n\n    // Delete all candidates\n    axios\n      .delete(\"http://localhost:5000/api/candidates\", {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          console.log(\"Candidates deleted successfully\");\n        }\n      })\n      .catch((err) => swal(\"Error! DELETING CANDIDATES\", err.message, \"error\"));\n  };\n\n  const useStyles = makeStyles(() => ({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: \"#333\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <div\n        style={{ marginTop: \"100px\", marginLeft: \"320px\" }}\n        class=\"container px-10 py-10\"\n        id=\"hanging-icons\"\n      >\n        <h2 class=\"pb-2 border-bottom\">Admin Options</h2>\n        <div class=\"row g-4 py-5 row-cols-1 row-cols-lg-4\">\n          <div class=\"col d-flex align-items-start\">\n            <img\n              style={{\n                marginBottom: \"9px\",\n                marginRight: \"5px\",\n                objectFit: \"cover\",\n                width: \"20px\",\n                height: \"20px\",\n              }}\n              src=\"https://img.icons8.com/ios-filled/50/000000/add-user-male.png\"\n            />\n            <div>\n              <h3>Add User</h3>\n              <p>\n                Add new user ..... We'll add onto it with another sentence and\n                probably just keep going until we run out of words.We'll add\n                onto it with another sentence.\n              </p>\n              {/* Add User Button */}\n              <a\n                style={{\n                  color: \"white\",\n                  fontWeight: \"400\",\n                  textDecoration: \"none\",\n                }}\n                onClick={addUser}\n                class=\"btn btn-secondary btn-md\"\n              >\n                Add User{\" \"}\n              </a>\n            </div>\n          </div>\n\n          <div class=\"col d-flex align-items-start\">\n            <img\n              style={{\n                marginBottom: \"9px\",\n                marginRight: \"5px\",\n                objectFit: \"cover\",\n                width: \"20px\",\n                height: \"20px\",\n              }}\n              src=\"https://img.icons8.com/material-rounded/24/000000/add-property.png\"\n            />\n            <div>\n              <h3>Add Canddiate</h3>\n              <p>\n                Add new Candidate ..... We'll add onto it with another sentence\n                and probably just keep going until we run out of words.We'll add\n                onto it with another sentence.\n              </p>\n              {/* Add Candidate Button */}\n              <a\n                style={{\n                  color: \"white\",\n                  fontWeight: \"400\",\n                  textDecoration: \"none\",\n                }}\n                onClick={addCandidate}\n                class=\"btn btn-secondary btn-md\"\n              >\n                Add Candidate{\" \"}\n              </a>\n            </div>\n          </div>\n\n          <div class=\"col d-flex align-items-start\">\n            <img\n              style={{\n                marginBottom: \"9px\",\n                marginRight: \"5px\",\n                objectFit: \"cover\",\n                width: \"20px\",\n                height: \"20px\",\n              }}\n              src=\"https://img.icons8.com/material-rounded/24/000000/remove-delivery.png\"\n            />\n            <div>\n              <h3>Remove Candidate</h3>\n              <p>\n                Remove Candidate ..... We'll add onto it with another sentence\n                and probably just keep going until we run out of words.We'll add\n                onto it with another sentence.\n              </p>\n              {/* Remove Candidate Button */}\n              <a\n                style={{\n                  color: \"white\",\n                  fontWeight: \"400\",\n                  textDecoration: \"none\",\n                }}\n                onClick={removeCandidate}\n                class=\"btn btn-secondary btn-md\"\n              >\n                Remove Candidate{\" \"}\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <div\n          style={{ width: \"360px\", marginLeft: \"370px\" }}\n          class=\"row g-4 py-5 row-cols-1 row-cols-lg-4\"\n        >\n          <div class=\"col d-flex align-items-start\">\n            <img\n              style={{\n                marginBottom: \"9px\",\n                marginRight: \"5px\",\n                objectFit: \"cover\",\n                width: \"20px\",\n                height: \"20px\",\n              }}\n              src=\"https://img.icons8.com/ios-filled/50/000000/tv-off.png\"\n            />\n            <div>\n              <h3>End Election</h3>\n              <p>\n                End election ..... We'll add onto it with another sentence and\n                probably just keep going until we run out of words.We'll add\n                onto it with another sentence.\n              </p>\n              {/* End Election Button */}\n              <a\n                style={{\n                  color: \"white\",\n                  fontWeight: \"400\",\n                  textDecoration: \"none\",\n                }}\n                onClick={endElection}\n                class=\"btn btn-secondary btn-md\"\n              >\n                End Election{\" \"}\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default TestAdmin;\n",{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":17},{"ruleId":"189","severity":1,"message":"193","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":20},{"ruleId":"189","severity":1,"message":"194","line":9,"column":8,"nodeType":"191","messageId":"192","endLine":9,"endColumn":13},{"ruleId":"189","severity":1,"message":"195","line":16,"column":8,"nodeType":"191","messageId":"192","endLine":16,"endColumn":22},{"ruleId":"189","severity":1,"message":"196","line":18,"column":8,"nodeType":"191","messageId":"192","endLine":18,"endColumn":26},{"ruleId":"197","severity":1,"message":"198","line":96,"column":11,"nodeType":"191","messageId":"199","endLine":96,"endColumn":21},{"ruleId":"197","severity":1,"message":"198","line":101,"column":5,"nodeType":"191","messageId":"199","endLine":101,"endColumn":15},{"ruleId":"189","severity":1,"message":"200","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":16},{"ruleId":"189","severity":1,"message":"201","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":14},{"ruleId":"189","severity":1,"message":"202","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":11},{"ruleId":"203","severity":1,"message":"204","line":172,"column":29,"nodeType":"205","endLine":175,"endColumn":31},{"ruleId":"206","severity":1,"message":"207","line":165,"column":60,"nodeType":"208","messageId":"209","endLine":165,"endColumn":66},{"ruleId":"189","severity":1,"message":"210","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"211","line":1,"column":39,"nodeType":"191","messageId":"192","endLine":1,"endColumn":47},{"ruleId":"189","severity":1,"message":"212","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":20},{"ruleId":"189","severity":1,"message":"213","line":10,"column":8,"nodeType":"191","messageId":"192","endLine":10,"endColumn":15},{"ruleId":"189","severity":1,"message":"214","line":16,"column":11,"nodeType":"191","messageId":"192","endLine":16,"endColumn":31},{"ruleId":"189","severity":1,"message":"201","line":7,"column":8,"nodeType":"191","messageId":"192","endLine":7,"endColumn":14},{"ruleId":"215","severity":1,"message":"216","line":9,"column":5,"nodeType":"217","messageId":"218","endLine":11,"endColumn":6},{"ruleId":"189","severity":1,"message":"219","line":6,"column":11,"nodeType":"191","messageId":"192","endLine":6,"endColumn":28},{"ruleId":"189","severity":1,"message":"220","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":20},{"ruleId":"189","severity":1,"message":"221","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"222","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"223","line":3,"column":8,"nodeType":"191","messageId":"192","endLine":3,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":7,"column":1,"nodeType":"226","endLine":17,"endColumn":2},{"ruleId":"203","severity":1,"message":"204","line":72,"column":13,"nodeType":"205","endLine":72,"endColumn":58},{"ruleId":"227","severity":1,"message":"228","line":87,"column":19,"nodeType":"205","endLine":87,"endColumn":147},{"ruleId":"227","severity":1,"message":"228","line":94,"column":21,"nodeType":"205","endLine":94,"endColumn":131},{"ruleId":"203","severity":1,"message":"204","line":105,"column":19,"nodeType":"205","endLine":105,"endColumn":91},{"ruleId":"227","severity":1,"message":"228","line":108,"column":19,"nodeType":"205","endLine":108,"endColumn":121},{"ruleId":"224","severity":1,"message":"225","line":4,"column":1,"nodeType":"226","endLine":24,"endColumn":2},{"ruleId":"203","severity":1,"message":"204","line":12,"column":19,"nodeType":"205","endLine":12,"endColumn":149},{"ruleId":"189","severity":1,"message":"210","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"221","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":14},{"ruleId":"189","severity":1,"message":"210","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"211","line":1,"column":39,"nodeType":"191","messageId":"192","endLine":1,"endColumn":47},{"ruleId":"189","severity":1,"message":"214","line":11,"column":9,"nodeType":"191","messageId":"192","endLine":11,"endColumn":29},{"ruleId":"189","severity":1,"message":"229","line":156,"column":9,"nodeType":"191","messageId":"192","endLine":156,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":168,"column":13,"nodeType":"205","endLine":177,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":186,"column":15,"nodeType":"205","endLine":194,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":201,"column":13,"nodeType":"205","endLine":210,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":219,"column":15,"nodeType":"205","endLine":227,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":234,"column":13,"nodeType":"205","endLine":243,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":252,"column":15,"nodeType":"205","endLine":260,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":272,"column":13,"nodeType":"205","endLine":281,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":290,"column":15,"nodeType":"205","endLine":298,"endColumn":16},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'LoginForm' is defined but never used.","Identifier","unusedVar","'RegisterForm' is defined but never used.","'Admin' is defined but never used.","'ForgotPassword' is defined but never used.","'ConfirmNewPassword' is defined but never used.","no-const-assign","'candidates' is constant.","const","'Button' is defined but never used.","'Layout' is defined but never used.","'jwt' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'Component' is defined but never used.","'useState' is defined but never used.","'ListItemIcon' is defined but never used.","'Divider' is defined but never used.","'checkIfAuthenticated' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'componentDidMount' is assigned a value but never used.","'makeStyles' is defined but never used.","'Link' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]